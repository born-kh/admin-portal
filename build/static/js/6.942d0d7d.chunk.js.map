{"version":3,"sources":["store/actions/settingsActions.js","components/common/SearchInput/index.jsx","components/views/UserManager/Users/UsersTable.jsx","components/views/UserManager/Users/index.jsx","store/actions/presenceInfoActions.js","components/views/UserManager/AccountInfo/index.jsx","components/views/UserManager/AccountInfo/ApplicationInfo/Info.jsx","components/views/UserManager/AccountInfo/ApplicationInfo/DocumentList.jsx","components/views/UserManager/AccountInfo/ApplicationInfo/index.jsx","components/views/UserManager/index.jsx"],"names":["__webpack_require__","d","__webpack_exports__","changeSearch","constants_ActionType__WEBPACK_IMPORTED_MODULE_0__","search","type","types","payload","connect","state","settings","dispatch","onChangeSearchValue","e","target","value","props","_useState","useState","isActive","_useState2","Object","_Users_nexsus_Documents_projects_react_admin_portal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","activeSearch","toggleSearch","searchWrapperClass","cx","active","handleToggleSearch","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","onChange","onKeyPress","keyPressed","placeholder","onClick","UsersTable","_this","classCallCheck","this","_super","call","handleClickOpenDialog","rowIndex","req","setState","modal","handleClickCloseDialog","_this$props","messagesData","_this$state","react_default","Modal","fade","isOpen","toggle","ModalHeader","ModalBody","main_default","src","request","response","ModalFooter","Button","color","_this$props2","usersData","match","Row","Col","md","Card","CardBody","react_table_es","columns","Header","id","accessor","Cell","row","react_router_dom","to","path","concat","accountID","alt","undefined","avatar","avatar2","width","firstName","lastName","data","defaultPageSize","React","Component","withRouter","Users","handleChangeApplicationSearch","event","defineProperty","name","handleChange","length","params","onBlurUserInput","searchUserList","findIndex","obj","push","filter","console","log","firstname","lastname","phoneNumber","handleOnSubmit","bind","assertThisInitialized","searchAccoountsList","phone","passportAPI","getApplicationsByName","status","Promise","all","applications","map","_ref","asyncToGenerator","regenerator_default","mark","_callee","application","wrap","_context","prev","next","stop","_x2","apply","arguments","fetchUsers","pending","error","users","react_loaders_default","Users_UsersTable","react","react_addons_css_transition_group_default","component","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","transitionName","PageTitle","heading","icon","subheading","CardHeader","FormGroup","Input","onBlur","handleOnChange","outline","renderUserTable","UsersWithRouter","user","profile","auth","session","presenceInfoSuccess","result","fetchPresenceInfo","presenceAPI","getPresenceInfo","then","varStatus","catch","presenceInfoError","AccountInfo","history","AccountProfile","userInfo","WithRouterAccountInfo","ownProps","find","fetchApllicationsByAccount","fetchApplicationsByAccount","Info","ListGroup","ListGroupItem","ListGroupItemText","ListGroupItemHeading","countryName","countryISOCode","dateFormatter","createdAt","ID","DocumentList","documents","style","backgroundImage","bg1","avatar6","flush","username","Table","bordered","document","index","scope","getDocumentStatusText","fileInfo","originalName","documentType","typeName","align","height","react_viewerjs_lib","imageUrls","options","imageOptions","cursor","max-width","max-height","verticalAlign","lg","xl","renderTable","ApplicationInfo","startProcedure","page","pageSize","handleStartProcedure","handleDoneProcedure","handleGetApplications","fetchDocuments","applicationID","goBack","_this2","filterApplications","errorDoc","pendingDoc","DocumentProcedure","backUrl","url","Container","fluid","disabled","ApplicationInfo_Info","ApplicationInfo_DocumentList","WithRouterApplicationInfo","passport","deleteApplication","fetchApplications","JSON","parse","localStorage","getItem","PERMISSIONS","Layouts","react_router","exact","searchPassportManager"],"mappings":"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","file":"static/js/6.942d0d7d.chunk.js","sourcesContent":["import * as types from 'constants/ActionType';\n\nexport function changeSearch(search) {\n  return {\n    type: types.CHANGE_SEARCH,\n    payload: search\n  };\n}\n","import React, { useState } from 'react';\nimport cx from 'classnames';\nimport { changeSearch } from 'store/actions/settingsActions';\nimport { connect } from 'react-redux';\n\nconst SearchInput = props => {\n  const [activeSearch, toggleSearch] = useState(props.isActive);\n  const searchWrapperClass = cx('search-wrapper', {\n    active: activeSearch\n  });\n  const handleToggleSearch = () => {\n    toggleSearch(!activeSearch);\n  };\n\n  return (\n    <div className={searchWrapperClass}>\n      <div className=\"input-holder\">\n        <input\n          className=\"search-input\"\n          onChange={props.onChangeSearchValue}\n          onKeyPress={props.keyPressed}\n          placeholder={props.placeholder}\n          type=\"text\"\n          value={props.search}\n        />\n        <button\n          className=\"search-icon\"\n          onClick={handleToggleSearch}\n        >\n          <span />\n        </button>\n      </div>\n      <button\n        className=\"close\"\n        onClick={handleToggleSearch}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  search: state.settings.search\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onChangeSearchValue: e => {\n      dispatch(changeSearch(e.target.value));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchInput);\n","import React from 'react';\n\nimport _ from 'lodash';\nimport { Link, withRouter } from 'react-router-dom';\nimport ReactJson from 'react-json-view';\nimport avatar2 from 'assets/utils/images/avatars/2.jpg';\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\n\nimport ReactTable from 'react-table';\n\nclass UsersTable extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      rowIndex: 0,\n      req: false,\n      modal: false\n    };\n  }\n\n  handleClickOpenDialog = (rowIndex, req) => {\n    this.setState({\n      modal: !this.state.modal,\n      req: req,\n      rowIndex\n    });\n  };\n  handleClickCloseDialog = () => {\n    this.setState({\n      modal: !this.state.modal,\n      req: false,\n      rowIndex: 0\n    });\n  };\n\n  renderDialog() {\n    const { messagesData, className } = this.props;\n    const { modal, req } = this.state;\n    if (modal) {\n      return (\n        <Modal\n          fade={false}\n          isOpen={modal}\n          toggle={this.handleClickCloseDialog}\n        >\n          <ModalHeader toggle={this.handleClickCloseDialog}>\n            {req ? 'Request' : 'Response'}\n          </ModalHeader>\n          <ModalBody>\n            <ReactJson\n              src={\n                req\n                  ? messagesData[this.state.rowIndex].request\n                  : messagesData[this.state.rowIndex].response\n              }\n            />\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color=\"link\"\n              onClick={this.handleClickCloseDialog}\n            >\n              Cancel\n            </Button>\n            <Button\n              color=\"primary\"\n              onClick={this.handleClickCloseDialog}\n            >\n              Ok\n            </Button>\n          </ModalFooter>\n        </Modal>\n      );\n    }\n  }\n\n  render() {\n    const { usersData, match } = this.props;\n    return (\n      <Row>\n        <Col md=\"12\">\n          <Card className=\"main-card mb-3\">\n            <CardBody>\n              <ReactTable\n                className=\"-striped -highlight\"\n                columns={[\n                  {\n                    columns: [\n                      {\n                        Header: 'Full Name',\n                        id: 'row',\n                        accessor: d => d,\n\n                        Cell: row => (\n                          <div>\n                            <Link to={match.path + `/${row.value.accountID}`}>\n                              <div className=\"widget-content p-0\">\n                                <div className=\"widget-content-wrapper\">\n                                  <div className=\"widget-content-left mr-3\">\n                                    <div className=\"widget-content-left\">\n                                      <img\n                                        alt=\"\"\n                                        className=\"rounded-circle\"\n                                        src={\n                                          row.value.avatar !== undefined\n                                            ? `https://wssdev.nexustls.com/files/file/${row.value.avatar}/medium`\n                                            : avatar2\n                                        }\n                                        width={52}\n                                      />\n                                    </div>\n                                  </div>\n\n                                  <div className=\"widget-content-left flex2\">\n                                    <div className=\"widget-heading\">\n                                      {row.value.firstName} {row.value.lastName}\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </Link>\n                          </div>\n                        )\n                      },\n                      {\n                        Header: 'User Name',\n                        accessor: 'username'\n                      },\n                      {\n                        Header: 'Account ID',\n                        accessor: 'accountID'\n                      }\n                    ]\n                  }\n                ]}\n                data={usersData}\n                defaultPageSize={5}\n              />\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default withRouter(UsersTable);\n","import React, { Component, Fragment } from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PageTitle from 'components/common/PageTitle';\n\nimport SearchInput from 'components/common/SearchInput';\nimport Loader from 'react-loaders';\nimport { fetchUsers, fetchUsersPending } from 'store/actions/userActions';\nimport UsersTable from './UsersTable';\nimport {\n  Col,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Input,\n  FormGroup,\n  Button\n} from 'reactstrap';\nimport { DropdownList } from 'react-widgets';\nimport queryString from 'query-string';\nimport PropTypes from 'prop-types';\nimport LoaderOverlay from 'components/common/LoaderOverlay';\n\nimport { passportAPI } from 'service/api';\n\nconst types = ['username', 'phone', 'email', 'accountID'];\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchUserList: [],\n\n      firstname: '',\n      lastname: '',\n      phoneNumber: '',\n      params: {\n        search: '',\n        type: ''\n      }\n    };\n\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n  }\n\n  async handleOnSubmit(event) {\n    const { searchUserList } = this.state;\n    var searchAccoountsList = [];\n\n    const { firstname, lastname, phoneNumber } = this.state;\n    let name = {\n      firstName: firstname,\n      lastName: lastname\n    };\n    let params = {\n      name: name,\n      phone: phoneNumber\n    };\n\n    if (firstname !== '' || lastname !== '' || phoneNumber !== '') {\n      const response = await passportAPI.getApplicationsByName(params);\n      if ((response.status = 200)) {\n        await Promise.all(\n          response.data.applications.map(async application => {\n            searchAccoountsList.push({\n              type: 'accountID',\n              search: application.accountID\n            });\n          })\n        );\n        searchAccoountsList = searchAccoountsList.concat(searchUserList);\n        this.props.fetchUsers(searchAccoountsList);\n      }\n    } else {\n      if (searchUserList.length > 0) {\n        this.props.fetchUsers(searchUserList);\n      }\n    }\n  }\n\n  handleChangeApplicationSearch = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    if (value.length === 0) {\n      this.setState({\n        params: { type: '', search: '' }\n      });\n    } else {\n      this.setState({\n        params: { type: name, search: value }\n      });\n    }\n  };\n\n  onBlurUserInput = event => {\n    var searchUserList = this.state.searchUserList;\n    const findIndex = this.state.searchUserList.findIndex(\n      obj => obj.type === event.target.name\n    );\n    // if (event.target.value.length > 0) {\n    if (findIndex === -1) {\n      searchUserList.push({\n        type: event.target.name,\n        search: event.target.value\n      });\n    } else {\n      searchUserList[findIndex] = {\n        type: event.target.name,\n        search: event.target.value\n      };\n    }\n    searchUserList = searchUserList.filter(obj => obj.search !== '');\n    console.log(searchUserList);\n    this.setState({ searchUserList });\n  };\n\n  renderUserTable() {\n    const { pending, error, users } = this.props;\n\n    if (pending) {\n      return (\n        <div className=\"text-center\">\n          <Loader type=\"ball-scale\" />\n        </div>\n      );\n    }\n    if (error) {\n      return (\n        <div className=\"widget-content\">\n          <div className=\"widget-content-wrapper\">\n            <div className=\"widget-content-right ml-0 mr-3\">\n              <div className=\"widget-subheading\">{error}</div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    if (users.length === 0) {\n      return (\n        <div className=\"widget-content\">\n          <div className=\"widget-content-wrapper\">\n            <div className=\"widget-content-right ml-0 mr-3\">\n              <div className=\"widget-subheading\">There are no users</div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return <UsersTable usersData={users} />;\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <Fragment>\n        <ReactCSSTransitionGroup\n          component=\"div\"\n          transitionAppear\n          transitionAppearTimeout={0}\n          transitionEnter={false}\n          transitionLeave={false}\n          transitionName=\"TabsAnimation\"\n        >\n          <PageTitle\n            heading=\"User Manager\"\n            icon=\"pe-7s-user icon-gradient bg-night-fade\"\n            subheading=\"\"\n          />\n          <Col md=\"12\">\n            <Card className=\"main-card mb-3\">\n              <CardHeader className=\"card-header-tab\">\n                Advanced search\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col md={2}>\n                    <FormGroup>\n                      <Input\n                        id=\"usernameID\"\n                        name=\"username\"\n                        onBlur={this.onBlurUserInput}\n                        onChange={this.handleOnChange}\n                        placeholder=\"UserName\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Input\n                        id=\"phoneID\"\n                        name=\"phone\"\n                        onBlur={this.onBlurUserInput}\n                        onChange={this.handleOnChange}\n                        placeholder=\"Phone Number\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Input\n                        id=\"accountID\"\n                        name=\"accountID\"\n                        onBlur={this.onBlurUserInput}\n                        onChange={this.handleOnChange}\n                        placeholder=\"Account ID\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Input\n                        id=\"emailID\"\n                        name=\"email\"\n                        onBlur={this.onBlurUserInput}\n                        onChange={this.handleOnChange}\n                        placeholder=\"Email\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col md={2}>\n                    <FormGroup>\n                      <Input\n                        id=\"firstNameID\"\n                        name=\"firstname\"\n                        onBlur={this.onBlurUserInput}\n                        onChange={this.handleChangeApplicationSearch}\n                        placeholder=\"First Name\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Input\n                        id=\"lastNameID\"\n                        name=\"lastname\"\n                        onBlur={this.onBlurUserInput}\n                        onChange={this.handleChangeApplicationSearch}\n                        placeholder=\"Last Name\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Input\n                        id=\"passportID\"\n                        name=\"passportID\"\n                        onChange={this.handleChangeApplicationSearch}\n                        placeholder=\"Passport ID\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n                    <Button\n                      className={\n                        'border-0 btn-pill btn-wide  btn-transition active'\n                      }\n                      color=\"alternate\"\n                      onClick={this.handleOnSubmit}\n                      outline\n                    >\n                      Search\n                    </Button>\n                  </Col>\n                </Row>\n                {this.renderUserTable()}\n              </CardBody>\n            </Card>\n          </Col>\n        </ReactCSSTransitionGroup>\n      </Fragment>\n    );\n  }\n}\n\nUsers.propTypes = {\n  className: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  users: state.user.users,\n  search: state.settings.search,\n  pending: state.user.pending,\n  error: state.user.error,\n  profile: state.auth.profile,\n  session: state.auth.session\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: params => dispatch(fetchUsers(params))\n  };\n};\n\nconst UsersWithRouter = withRouter(Users);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UsersWithRouter);\n","import * as types from 'constants/ActionType';\nimport { presenceAPI } from 'service/api';\nimport { errorMessage } from 'helpers/errorMessage';\n\nexport function presenceInfoPending() {\n  return {\n    type: types.FETCH_PRESENCE_INFO_PENDING\n  };\n}\n\nexport function presenceInfoSuccess(result) {\n  return {\n    type: types.FETCH_PRESENCE_INFO_SUCCESS,\n    result\n  };\n}\n\nexport function presenceInfoError(error) {\n  return {\n    type: types.FETCH_PRESENCE_INFO_ERROR,\n    error\n  };\n}\n\nexport function fetchPresenceInfo(params) {\n  return dispatch => {\n    dispatch(presenceInfoPending());\n    presenceAPI\n      .getPresenceInfo(params)\n      .then(response => {\n        if (response.data.varStatus !== undefined) {\n          dispatch(presenceInfoSuccess(response.data));\n        } else if (response.data.error !== undefined) {\n          dispatch(presenceInfoSuccess(response.data.error));\n        }\n      })\n      .catch(error => {\n        dispatch(presenceInfoError(''));\n      });\n  };\n}\n","import React, { Fragment } from 'react';\nimport PageTitle from 'components/common/PageTitle';\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport AccountProfile from './AccountProfile';\nimport {\n  fetchUsers,\n  fetchApplicationsByAccount\n} from 'store/actions/userActions';\nimport { fetchPresenceInfo } from 'store/actions/presenceInfoActions';\n\nclass AccountInfo extends React.Component {\n  componentDidMount() {\n    const { user } = this.props;\n    if (!user) {\n      this.props.history.push('/user-manager/users');\n    } else {\n      this.props.fetchPresenceInfo({ accountID: user.accountID });\n    }\n  }\n  render() {\n    if (this.props.user) {\n      return (\n        <Fragment>\n          <PageTitle\n            heading=\"\"\n            icon=\"pe-7s-science icon-gradient bg-happy-itmeo\"\n            subheading=\"\"\n          />\n\n          <AccountProfile userInfo={this.props.user} />\n        </Fragment>\n      );\n    } else {\n      return <div />;\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.accountID;\n\n  return {\n    user: state.user.users.find(user => user.accountID === id)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchApllicationsByAccount: params =>\n      dispatch(fetchApplicationsByAccount(params)),\n    fetchPresenceInfo: params => dispatch(fetchPresenceInfo(params))\n  };\n};\n\nconst WithRouterAccountInfo = withRouter(AccountInfo);\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WithRouterAccountInfo);\n","import React, { Fragment } from 'react';\nimport { Col, Card, CardBody, CardHeader } from 'reactstrap';\nimport {\n  ListGroup,\n  ListGroupItem,\n  ListGroupItemHeading,\n  ListGroupItemText\n} from 'reactstrap';\nimport { dateFormatter } from 'helpers';\n\nclass Info extends React.Component {\n  render() {\n    const { application } = this.props;\n\n    return (\n      <Fragment>\n        <Col md=\"6\">\n          <Card className=\"main-card mb-3\">\n            <CardHeader className=\"card-header-tab\">\n              <div className=\"card-header-title\">Appplication Info</div>\n            </CardHeader>\n            <CardBody>\n              <ListGroup>\n                <ListGroupItem>\n                  <ListGroupItemText>First Name</ListGroupItemText>\n                  <ListGroupItemHeading>\n                    {application.firstName}\n                  </ListGroupItemHeading>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <ListGroupItemText>Last Name</ListGroupItemText>\n                  <ListGroupItemHeading>\n                    {application.lastName}\n                  </ListGroupItemHeading>\n                </ListGroupItem>\n\n                <ListGroupItem>\n                  <ListGroupItemText>Application status</ListGroupItemText>\n                  <ListGroupItemHeading>\n                    {application.status}\n                  </ListGroupItemHeading>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <ListGroupItemText>Country Name</ListGroupItemText>\n                  <ListGroupItemHeading>\n                    {application.countryName}\n                  </ListGroupItemHeading>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <ListGroupItemText>Country ISO Code</ListGroupItemText>\n                  <ListGroupItemHeading>\n                    {application.countryISOCode}\n                  </ListGroupItemHeading>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <ListGroupItemText>Date Time</ListGroupItemText>\n                  <ListGroupItemHeading>\n                    {dateFormatter(application.createdAt)}\n                  </ListGroupItemHeading>\n                </ListGroupItem>\n\n                <ListGroupItem>\n                  <ListGroupItemText>Application ID</ListGroupItemText>\n                  <ListGroupItemHeading>{application.ID}</ListGroupItemHeading>\n                </ListGroupItem>\n              </ListGroup>\n            </CardBody>\n          </Card>\n        </Col>\n      </Fragment>\n    );\n  }\n}\n\nexport default Info;\n","import React, { Fragment } from 'react';\nimport Loader from 'react-loaders';\nimport {\n  Col,\n  Card,\n  CardBody,\n  CardHeader,\n  Table,\n  ListGroup,\n  ListGroupItem\n} from 'reactstrap';\nimport Lightbox from 'react-image-lightbox';\nimport avatar6 from 'assets/utils/images/avatars/2.jpg';\nimport bg1 from 'assets/utils/images/dropdown-header/abstract1.jpg';\n\nimport { RViewerTrigger, RViewer } from 'react-viewerjs';\nimport { imageOptions } from 'constants/ActionType';\nimport { getDocumentStatusText } from 'helpers';\nclass DocumentList extends React.Component {\n  renderTable() {\n    const { documents, pending, error } = this.props;\n    console.log(pending, error);\n\n    if (pending) {\n      return (\n        <div className=\"text-center\">\n          <Loader type=\"ball-scale\" />\n        </div>\n      );\n    }\n\n    if (error) {\n      if (!error.accountID) {\n        return (\n          <div className=\"dropdown-menu-header\">\n            <div className=\"dropdown-menu-header-inner bg-primary\">\n              <div className=\"menu-header-content\">\n                <div className=\"widget-subheading\">{error}</div>\n              </div>\n            </div>\n          </div>\n        );\n      }\n      var userInfo = error;\n\n      return (\n        <Card className=\"card-shadow-primary profile-responsive card-border mb-3\">\n          <CardHeader>Заявка уже открыто </CardHeader>\n          <div className=\"dropdown-menu-header\">\n            <div className=\"dropdown-menu-header-inner bg-info\">\n              <div\n                className=\"menu-header-image opacity-2\"\n                style={{\n                  backgroundImage: 'url(' + bg1 + ')'\n                }}\n              />\n              <div className=\"menu-header-content btn-pane-right\">\n                <div className=\"avatar-icon-wrapper mr-2 avatar-icon-xl\">\n                  <div className=\"avatar-icon rounded\">\n                    <img\n                      alt=\"Avatar 5\"\n                      src={\n                        userInfo.avatar !== undefined\n                          ? `https://wssdev.nexustls.com/files/file/${userInfo.avatar}/medium`\n                          : avatar6\n                      }\n                    />\n                  </div>\n                </div>\n                <div>\n                  <h5 className=\"menu-header-title\">\n                    {userInfo.firstName} {userInfo.lastName}\n                  </h5>\n                </div>\n              </div>\n            </div>\n          </div>\n          <CardBody className=\"p-0\">\n            <ListGroup flush>\n              <ListGroupItem>\n                <b className=\"text-dark\">First Name: </b>\n                {userInfo.firstName}\n              </ListGroupItem>\n              <ListGroupItem>\n                <b className=\"text-dark\">Last Name: </b>\n                {userInfo.lastName}\n              </ListGroupItem>\n              <ListGroupItem>\n                <b className=\"text-dark\">User Name: </b>\n                {userInfo.username}\n              </ListGroupItem>\n              <ListGroupItem>\n                <b className=\"text-dark\">Account ID: </b>\n                {userInfo.accountID}\n              </ListGroupItem>\n            </ListGroup>\n          </CardBody>\n        </Card>\n      );\n    }\n    if (documents.length == 0) {\n      return (\n        <div className=\"dropdown-menu-header\">\n          <div className=\"dropdown-menu-header-inner bg-primary\">\n            <div className=\"menu-header-content\">\n              <div className=\"widget-subheading\">There are no documents</div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    if (documents.length > 0) {\n      return (\n        <Table\n          bordered\n          className=\"mb-0\"\n        >\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Document Info</th>\n              <th>Image</th>\n            </tr>\n          </thead>\n\n          {documents.map((document, index) => {\n            return (\n              <tbody>\n                <tr>\n                  <th scope=\"row\">{index + 1}</th>\n                  <td width=\"50%\">\n                    <b className=\"text-dark\">Status: </b>\n                    {getDocumentStatusText(document.status)}\n                    <div className=\"divider\" />\n                    <b className=\"text-dark\">File name: </b>\n                    {document.fileInfo.originalName}\n\n                    <div className=\"divider\" />\n                    <b className=\"text-dark\">Type name: </b>\n                    {document.documentType.typeName}\n                  </td>\n\n                  <td\n                    align=\"center\"\n                    height=\"200px\"\n                    width=\"40%\"\n                  >\n                    <RViewer\n                      imageUrls={`http://10.7.8.129:9004/document/${document.ID}`}\n                      options={imageOptions}\n                    >\n                      <RViewerTrigger>\n                        <img\n                          src={`http://10.7.8.129:9004/document/${document.ID}`}\n                          style={{\n                            cursor: 'pointer',\n                            'max-width': '100%',\n                            'max-height': '100%',\n                            verticalAlign: 'middle'\n                          }}\n                        />\n                      </RViewerTrigger>\n                    </RViewer>\n                  </td>\n                </tr>\n              </tbody>\n            );\n          })}\n        </Table>\n      );\n    }\n  }\n\n  render() {\n    const { documents, pending, error } = this.props;\n    console.log(error);\n\n    return (\n      <Fragment>\n        <Col\n          lg=\"12\"\n          xl=\"6\"\n        >\n          <Card className=\"main-card mb-3\">\n            <CardHeader className=\"card-header-tab\">\n              <div className=\"card-header-title\">Documents</div>\n            </CardHeader>\n            <CardBody>{this.renderTable()}</CardBody>\n          </Card>\n        </Col>\n      </Fragment>\n    );\n  }\n}\n\nexport default DocumentList;\n","import React, { Fragment } from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport {\n  Button,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Container,\n  CardHeader\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  fetchDocuments,\n  deleteApplication,\n  fetchApplications\n} from 'store/actions/passportActions';\nimport Info from './Info';\nimport DocumentList from './DocumentList';\n\nimport { history } from 'helpers';\nimport { fetchUsers } from 'store/actions/userActions';\nimport DocumentProcedure from 'components/views/PassportManager/DocumentInfo/DocumentProcedure';\n\nclass ApplicationInfo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      startProcedure: false,\n      page: 0,\n      pageSize: 100\n    };\n    this.handleStartProcedure = this.handleStartProcedure.bind(this);\n    this.handleDoneProcedure = this.handleDoneProcedure.bind(this);\n    this.handleGetApplications = this.handleGetApplications.bind(this);\n  }\n  componentDidMount() {\n    const { fetchDocuments, application, fetchUsers } = this.props;\n    if (!application) {\n      this.props.history.goBack();\n    } else {\n      fetchDocuments({\n        applicationID: application.ID\n      });\n    }\n  }\n\n  handleStartProcedure() {\n    this.setState({ startProcedure: true });\n  }\n\n  handleDoneProcedure() {\n    this.setState({ startProcedure: false });\n  }\n\n  handleGetApplications() {\n    var filterApplications = this.props.applications.filter(\n      application => application.ID !== this.props.application.ID\n    );\n\n    if (filterApplications.length > 0) {\n      this.props.history.push(\n        `/passport-manager/applications/${filterApplications[0].ID}`\n      );\n    } else {\n    }\n  }\n\n  render() {\n    const { startProcedure } = this.state;\n    const { application, match, documents, errorDoc, pendingDoc } = this.props;\n\n    if (startProcedure && application) {\n      return (\n        <Fragment>\n          <ReactCSSTransitionGroup\n            component=\"div\"\n            transitionAppear\n            transitionAppearTimeout={0}\n            transitionEnter={false}\n            transitionLeave={false}\n            transitionName=\"TabsAnimation\"\n          >\n            <DocumentProcedure\n              accountID={application.accountID}\n              applicationID={application.ID}\n              backUrl={match.url}\n              documents={documents}\n              handleDoneProcedure={this.handleDoneProcedure}\n              handleGetApplications={this.handleGetApplications}\n            />\n          </ReactCSSTransitionGroup>\n        </Fragment>\n      );\n    }\n    if (application) {\n      return (\n        <Fragment>\n          <ReactCSSTransitionGroup\n            component=\"div\"\n            transitionAppear\n            transitionAppearTimeout={0}\n            transitionEnter={false}\n            transitionLeave={false}\n            transitionName=\"TabsAnimation\"\n          >\n            <Container fluid>\n              <Row>\n                <Col md=\"12\">\n                  <Card className=\"main-card mb-3\">\n                    <CardHeader className=\"card-header-tab\">\n                      <div className=\"card-header-title\">\n                        <Button\n                          className={\n                            'border-0 btn-pill btn-wide btn-transition active'\n                          }\n                          color=\"alternate\"\n                          // disabled={\n                          //   documents.length === 0 ||\n                          //   application.status !== 'PENDING'\n                          // }\n                          disabled={\n                            documents.length === 0 ||\n                            application.status !== 'PENDING'\n                          }\n                          onClick={this.handleStartProcedure}\n                          outline\n                        >\n                          Begin review\n                        </Button>\n                      </div>\n                      <div className=\"btn-actions-pane-right\">\n                        Status {'    '}\n                        <Button\n                          className=\"mb-2 mr-2 btn-transition\"\n                          color=\"alternate\"\n                          disabled\n                          outline\n                        >\n                          {application.status}\n                        </Button>\n                      </div>\n                    </CardHeader>\n                    <CardBody className=\"main-card mb-3\">\n                      <Row>\n                        <Info application={application} />\n                        <DocumentList\n                          documents={documents}\n                          error={errorDoc}\n                          pending={pendingDoc}\n                        />\n                      </Row>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </Container>\n          </ReactCSSTransitionGroup>\n        </Fragment>\n      );\n    } else {\n      return <div />;\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.applicationID;\n\n  return {\n    pendingDoc: state.passport.pending,\n    errorDoc: state.passport.error,\n    users: state.user.users,\n\n    pending: state.user.pending,\n    error: state.user.error,\n    documents: state.passport.documents,\n    application: state.user.applications.find(\n      application => application.ID === id\n    ),\n    applications: state.user.applications\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDocuments: params => dispatch(fetchDocuments(params)),\n    fetchUsers: params => dispatch(fetchUsers(params)),\n    deleteApplication: applicationID =>\n      dispatch(deleteApplication(applicationID)),\n    fetchApplications: params => dispatch(fetchApplications(params))\n  };\n};\n\nconst WithRouterApplicationInfo = withRouter(ApplicationInfo);\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WithRouterApplicationInfo);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Dashboard from 'components/Layouts';\nimport Users from './Users';\n\nimport { withRouter } from 'react-router-dom';\nimport AccountInfo from './AccountInfo';\nimport PERMISSIONS from 'constants';\n\nimport ApplicationInfo from './AccountInfo/ApplicationInfo';\nconst UserManager = ({ match }) => {\n  console.log('User Manager');\n  const permissions = JSON.parse(localStorage.getItem(PERMISSIONS));\n\n  return (\n    <Dashboard>\n      <Route\n        component={Users}\n        exact\n        path={`${match.url}/users`}\n      />\n      <Route\n        component={AccountInfo}\n        exact\n        path={`${match.url}/users/:accountID`}\n        searchPassportManager={false}\n      />\n\n      <Route\n        component={ApplicationInfo}\n        exact\n        path={'/user-manager/users/applicaion/:applicationID'}\n      />\n    </Dashboard>\n  );\n};\n\nexport default withRouter(UserManager);\n"],"sourceRoot":""}