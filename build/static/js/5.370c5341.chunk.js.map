{"version":3,"sources":["components/views/UserManager/Users/UsersTable.jsx","components/views/UserManager/Users/index.jsx","store/actions/sessionActions.js","components/views/UserManager/AccountInfo/OpenMaps.jsx","components/views/UserManager/AccountInfo/SessionTable.jsx","components/views/UserManager/AccountInfo/AccountProfile.jsx","store/actions/presenceInfoActions.js","components/views/UserManager/AccountInfo/index.jsx","components/views/UserManager/AccountInfo/ApplicationInfo/Info.jsx","components/views/UserManager/AccountInfo/ApplicationInfo/DocumentList.jsx","components/views/UserManager/AccountInfo/ApplicationInfo/index.jsx","components/views/UserManager/index.jsx"],"names":["UsersTable","_this","Object","classCallCheck","this","_super","call","handleClickOpenDialog","rowIndex","req","setState","modal","state","handleClickCloseDialog","messagesData","props","_this$state","react_default","a","createElement","Modal","fade","isOpen","toggle","ModalHeader","ModalBody","main_default","src","request","response","ModalFooter","Button","color","onClick","_this$props","usersData","match","Row","Col","md","Card","className","CardBody","react_table_es","columns","Header","id","accessor","d","Cell","row","react_router_dom","to","path","concat","value","accountID","alt","undefined","avatar","avatar2","width","firstName","lastName","data","defaultPageSize","React","Component","withRouter","Users","handleChangeApplicationSearch","event","defineProperty","target","name","handleChange","length","params","type","search","onBlurUserInput","searchUserList","findIndex","obj","push","filter","firstname","lastname","phoneNumber","handleOnSubmit","bind","assertThisInitialized","searchAccoountsList","phone","passportAPI","getApplicationsByName","status","_iterator","createForOfIteratorHelper","applications","s","_step","n","done","application","err","e","f","fetchUsers","pending","error","users","react_loaders_default","Users_UsersTable","react","react_addons_css_transition_group_default","component","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","transitionName","PageTitle","heading","icon","subheading","CardHeader","FormGroup","Input","onBlur","onChange","handleOnChange","placeholder","outline","renderUserTable","UsersWithRouter","connect","user","settings","profile","auth","session","dispatch","fetchAccountSessionsError","types","fetchAccountSessions","sessionAPI","getAccountSessions","then","sessions","blockList","blocklist","catch","console","log","GoogleMap","Map","animate","attributionControl","center","position","doubleClickZoom","dragging","easeLinearity","maxZoom","scrollWheelZoom","zoom","zoomControl","TileLayer","url","Marker","Popup","SessionTable","modalInfo","handleClickOpenMap","sessionIP","loadingMap","fetch","json","myJson","latitude","longitude","modalMap","userIP","handleClickCloseMap","handleSetTracing","index","isTracing","sessionID","meta","setTracer","onChangeTracing","toast","transition","Bounce","closeButton","autoClose","message","handleSessionSuspended","suspended","suspendSession","isSuspended","onChangeSuspended","handleRemoveSession","removeSession","sessionDelete","goToTracer","date","Date","setDate","getDate","fromTs","toISOString","toTs","history","fetchGetAccountSessions","_this$props2","_this$state2","size","Fragment","OpenMaps","_this2","_this$props3","data-off-label","data-on-label","cx","switch-on","switch-off","ip","loading","renderMap","renderInfoDialog","updateTracing","updateSuspended","deleteSession","AccountProfile","password","handleChangePassword","handleGeneratePassword","generator","generate","numbers","handleSetPassword","userInfo","userAPI","setPassword","phones","ListGroup","flush","map","i","ListGroupItem","key","number","emails","email","hasPassword","passwordType","fetchApllicationsByAccount","ApplicationTable","rows","lg","xl","style","backgroundImage","bg1","avatar6","username","renderAuth","CardFooter","dist_default","data-style","ZOOM_IN","disabled","renderPhones","renderEmails","AccountInfo_SessionTable","renderBlockList","renderTable","LoaderOverlay","pendingApplication","errorApplication","fetchApplicationsByAccount","presenceInfoSuccess","result","fetchPresenceInfo","presenceAPI","getPresenceInfo","varStatus","presenceInfoError","AccountInfo","AccountInfo_AccountProfile","WithRouterAccountInfo","ownProps","find","Info","ListGroupItemText","ListGroupItemHeading","countryName","countryISOCode","dateFormatter","createdAt","ID","DocumentList","documents","Table","bordered","document","scope","getDocumentStatusText","fileInfo","originalName","documentType","typeName","align","height","lib","imageUrls","options","imageOptions","cursor","max-width","max-height","verticalAlign","ApplicationInfo","startProcedure","page","pageSize","handleStartProcedure","handleDoneProcedure","handleGetApplications","fetchDocuments","applicationID","goBack","filterApplications","errorDoc","pendingDoc","DocumentProcedure","backUrl","Container","fluid","ApplicationInfo_Info","ApplicationInfo_DocumentList","WithRouterApplicationInfo","passport","deleteApplication","fetchApplications","_ref","Layouts","react_router","exact","searchPassportManager"],"mappings":"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","file":"static/js/5.370c5341.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Link, withRouter } from 'react-router-dom';\nimport ReactJson from 'react-json-view';\nimport avatar2 from 'assets/utils/images/avatars/2.jpg';\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\n\nimport ReactTable from 'react-table';\n\nclass UsersTable extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      rowIndex: 0,\n      req: false,\n      modal: false\n    };\n  }\n\n  handleClickOpenDialog = (rowIndex, req) => {\n    this.setState({\n      modal: !this.state.modal,\n      req: req,\n      rowIndex\n    });\n  };\n  handleClickCloseDialog = () => {\n    this.setState({\n      modal: !this.state.modal,\n      req: false,\n      rowIndex: 0\n    });\n  };\n\n  renderDialog() {\n    const { messagesData } = this.props;\n    const { modal, req } = this.state;\n    if (modal) {\n      return (\n        <Modal\n          fade={false}\n          isOpen={modal}\n          toggle={this.handleClickCloseDialog}\n        >\n          <ModalHeader toggle={this.handleClickCloseDialog}>\n            {req ? 'Request' : 'Response'}\n          </ModalHeader>\n          <ModalBody>\n            <ReactJson\n              src={\n                req\n                  ? messagesData[this.state.rowIndex].request\n                  : messagesData[this.state.rowIndex].response\n              }\n            />\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color=\"link\"\n              onClick={this.handleClickCloseDialog}\n            >\n              Cancel\n            </Button>\n            <Button\n              color=\"primary\"\n              onClick={this.handleClickCloseDialog}\n            >\n              Ok\n            </Button>\n          </ModalFooter>\n        </Modal>\n      );\n    }\n  }\n\n  render() {\n    const { usersData, match } = this.props;\n    return (\n      <Row>\n        <Col md=\"12\">\n          <Card className=\"main-card mb-3\">\n            <CardBody>\n              <ReactTable\n                className=\"-striped -highlight\"\n                columns={[\n                  {\n                    columns: [\n                      {\n                        Header: 'Full Name',\n                        id: 'row',\n                        accessor: d => d,\n\n                        Cell: row => (\n                          <div>\n                            <Link to={match.path + `/${row.value.accountID}`}>\n                              <div className=\"widget-content p-0\">\n                                <div className=\"widget-content-wrapper\">\n                                  <div className=\"widget-content-left mr-3\">\n                                    <div className=\"widget-content-left\">\n                                      <img\n                                        alt=\"\"\n                                        className=\"rounded-circle\"\n                                        src={\n                                          row.value.avatar !== undefined\n                                            ? `https://wssdev.nexustls.com/files/file/${row.value.avatar}/medium`\n                                            : avatar2\n                                        }\n                                        width={52}\n                                      />\n                                    </div>\n                                  </div>\n\n                                  <div className=\"widget-content-left flex2\">\n                                    <div className=\"widget-heading\">\n                                      {row.value.firstName} {row.value.lastName}\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </Link>\n                          </div>\n                        )\n                      },\n                      {\n                        Header: 'User Name',\n                        accessor: 'username'\n                      },\n                      {\n                        Header: 'Account ID',\n                        accessor: 'accountID'\n                      }\n                    ]\n                  }\n                ]}\n                data={usersData}\n                defaultPageSize={5}\n              />\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default withRouter(UsersTable);\n","import React, { Component, Fragment } from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PageTitle from 'components/common/PageTitle';\nimport Loader from 'react-loaders';\nimport { fetchUsers } from 'store/actions/userActions';\nimport UsersTable from './UsersTable';\nimport {\n  Col,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Input,\n  FormGroup,\n  Button\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { passportAPI } from 'service/api';\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchUserList: [],\n\n      firstname: '',\n      lastname: '',\n      phoneNumber: '',\n      params: {\n        search: '',\n        type: ''\n      }\n    };\n\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n  }\n\n  async handleOnSubmit(event) {\n    const { searchUserList } = this.state;\n    var searchAccoountsList = [];\n\n    const { firstname, lastname, phoneNumber } = this.state;\n    let name = {\n      firstName: firstname,\n      lastName: lastname\n    };\n    let params = {\n      name: name,\n      phone: phoneNumber\n    };\n\n    if (firstname !== '' || lastname !== '' || phoneNumber !== '') {\n      const response = await passportAPI.getApplicationsByName(params);\n      if ((response.status = 200)) {\n        for (let application of response.data.applications) {\n          searchAccoountsList.push({\n            type: 'accountID',\n            search: application.accountID\n          });\n        }\n\n        searchAccoountsList = searchAccoountsList.concat(searchUserList);\n        this.props.fetchUsers(searchAccoountsList);\n      }\n    } else {\n      if (searchUserList.length > 0) {\n        this.props.fetchUsers(searchUserList);\n      }\n    }\n  }\n\n  handleChangeApplicationSearch = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    if (value.length === 0) {\n      this.setState({\n        params: { type: '', search: '' }\n      });\n    } else {\n      this.setState({\n        params: { type: name, search: value }\n      });\n    }\n  };\n\n  onBlurUserInput = event => {\n    var searchUserList = this.state.searchUserList;\n    const findIndex = this.state.searchUserList.findIndex(\n      obj => obj.type === event.target.name\n    );\n\n    if (findIndex === -1) {\n      searchUserList.push({\n        type: event.target.name,\n        search: event.target.value\n      });\n    } else {\n      searchUserList[findIndex] = {\n        type: event.target.name,\n        search: event.target.value\n      };\n    }\n    searchUserList = searchUserList.filter(obj => obj.search !== '');\n\n    this.setState({ searchUserList });\n  };\n\n  renderUserTable() {\n    const { pending, error, users } = this.props;\n\n    if (pending) {\n      return (\n        <div className=\"text-center\">\n          <Loader type=\"ball-scale\" />\n        </div>\n      );\n    }\n    if (error) {\n      return (\n        <div className=\"widget-content\">\n          <div className=\"widget-content-wrapper\">\n            <div className=\"widget-content-right ml-0 mr-3\">\n              <div className=\"widget-subheading\">{error}</div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    if (users.length === 0) {\n      return (\n        <div className=\"widget-content\">\n          <div className=\"widget-content-wrapper\">\n            <div className=\"widget-content-right ml-0 mr-3\">\n              <div className=\"widget-subheading\">There are no users</div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return <UsersTable usersData={users} />;\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <ReactCSSTransitionGroup\n          component=\"div\"\n          transitionAppear\n          transitionAppearTimeout={0}\n          transitionEnter={false}\n          transitionLeave={false}\n          transitionName=\"TabsAnimation\"\n        >\n          <PageTitle\n            heading=\"User Manager\"\n            icon=\"pe-7s-user icon-gradient bg-night-fade\"\n            subheading=\"\"\n          />\n          <Col md=\"12\">\n            <Card className=\"main-card mb-3\">\n              <CardHeader className=\"card-header-tab\">\n                Advanced search\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col md={2}>\n                    <FormGroup>\n                      <Input\n                        id=\"usernameID\"\n                        name=\"username\"\n                        onBlur={this.onBlurUserInput}\n                        onChange={this.handleOnChange}\n                        placeholder=\"UserName\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Input\n                        id=\"phoneID\"\n                        name=\"phone\"\n                        onBlur={this.onBlurUserInput}\n                        onChange={this.handleOnChange}\n                        placeholder=\"Phone Number\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Input\n                        id=\"accountID\"\n                        name=\"accountID\"\n                        onBlur={this.onBlurUserInput}\n                        onChange={this.handleOnChange}\n                        placeholder=\"Account ID\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Input\n                        id=\"emailID\"\n                        name=\"email\"\n                        onBlur={this.onBlurUserInput}\n                        onChange={this.handleOnChange}\n                        placeholder=\"Email\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col md={2}>\n                    <FormGroup>\n                      <Input\n                        id=\"firstNameID\"\n                        name=\"firstname\"\n                        onBlur={this.onBlurUserInput}\n                        onChange={this.handleChangeApplicationSearch}\n                        placeholder=\"First Name\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Input\n                        id=\"lastNameID\"\n                        name=\"lastname\"\n                        onBlur={this.onBlurUserInput}\n                        onChange={this.handleChangeApplicationSearch}\n                        placeholder=\"Last Name\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Input\n                        id=\"passportID\"\n                        name=\"passportID\"\n                        onChange={this.handleChangeApplicationSearch}\n                        placeholder=\"Passport ID\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n                    <Button\n                      className={\n                        'border-0 btn-pill btn-wide  btn-transition active'\n                      }\n                      color=\"alternate\"\n                      onClick={this.handleOnSubmit}\n                      outline\n                    >\n                      Search\n                    </Button>\n                  </Col>\n                </Row>\n                {this.renderUserTable()}\n              </CardBody>\n            </Card>\n          </Col>\n        </ReactCSSTransitionGroup>\n      </Fragment>\n    );\n  }\n}\n\nUsers.propTypes = {\n  className: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  users: state.user.users,\n  search: state.settings.search,\n  pending: state.user.pending,\n  error: state.user.error,\n  profile: state.auth.profile,\n  session: state.auth.session\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: params => dispatch(fetchUsers(params))\n  };\n};\n\nconst UsersWithRouter = withRouter(Users);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UsersWithRouter);\n","import * as types from 'constants/ActionType';\nimport { sessionAPI } from 'service/api';\n\nexport function fetchAccountSessionsPending() {\n  return {\n    type: types.FETCH_ACCOUNT_SESSIONS_PENDING\n  };\n}\n\nexport function fetchAccountSessionsSuccess(data) {\n  return {\n    type: types.FETCH_ACCOUNT_SESSIONS_SUCCESS,\n    sessions: data.sessions,\n    blockList: data.blocklist\n  };\n}\n\nexport function fetchAccountSessionsError(error) {\n  return {\n    type: types.FETCH_ACCOUNT_SESSIONS_ERROR,\n    error\n  };\n}\n\nexport function updateTracing(params) {\n  return {\n    type: types.UPDATE_TRACING,\n    params\n  };\n}\n\nexport function updateSuspended(params) {\n  return {\n    type: types.UPDATE_SUSPENDED,\n    params\n  };\n}\n\nexport function deleteSession(sessionID) {\n  return {\n    type: types.SESSION_DELETE,\n    sessionID\n  };\n}\nexport function fetchAccountSessions(params) {\n  return dispatch => {\n    dispatch(fetchAccountSessionsPending());\n\n    sessionAPI\n      .getAccountSessions(params)\n      .then(response => {\n        if (response.data.sessions !== undefined) {\n          dispatch(fetchAccountSessionsSuccess(response.data));\n        } else if (response.data.error !== undefined) {\n          dispatch(fetchAccountSessionsError(response.data.error));\n        }\n      })\n      .catch(error => {\n        console.log(error);\n\n        dispatch(fetchAccountSessionsError(''));\n      });\n  };\n}\n","import React from 'react';\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from 'react-leaflet';\n\nclass GoogleMap extends React.Component {\n  render() {\n    return (\n      <LeafletMap\n        animate\n        attributionControl\n        center={this.props.position}\n        doubleClickZoom\n        dragging\n        easeLinearity={0.35}\n        maxZoom={10}\n        scrollWheelZoom\n        zoom={6}\n        zoomControl\n      >\n        <TileLayer url=\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\" />\n        <Marker position={this.props.position}>\n          <Popup>Popup for any custom information.</Popup>\n        </Marker>\n      </LeafletMap>\n    );\n  }\n}\n\nexport default GoogleMap;\n","import React from 'react';\nimport ReactJson from 'react-json-view';\nimport {\n  CardBody,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { history } from 'helpers';\nimport { toast, Bounce } from 'react-toastify';\nimport ReactTable from 'react-table';\nimport {\n  updateTracing,\n  updateSuspended,\n  fetchAccountSessions,\n  deleteSession\n} from 'store/actions/sessionActions';\nimport Loader from 'react-loaders';\nimport cx from 'classnames';\nimport { connect } from 'react-redux';\nimport { sessionAPI } from 'service/api';\nimport OpenMaps from './OpenMaps';\n\nclass SessionTable extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      rowIndex: 0,\n      req: false,\n      modalMap: false,\n      modalInfo: false,\n      userIP: '',\n      center: null,\n      position: null,\n      loadingMap: false\n    };\n\n    this.handleClickCloseDialog = this.handleClickCloseDialog.bind(this);\n    this.handleSessionSuspended = this.handleSessionSuspended.bind(this);\n  }\n\n  handleClickOpenDialog = rowIndex => {\n    this.setState({\n      modalInfo: !this.state.modalInfo,\n      rowIndex\n    });\n  };\n\n  handleClickOpenMap = sessionIP => {\n    this.setState({\n      loadingMap: true,\n      position: null\n    });\n    fetch(\n      `http://api.ipstack.com/${sessionIP}?access_key=98b92bffbfd727524f6027db62913163`\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(myJson => {\n        if (myJson.latitude) {\n          let position = [];\n          position.push(myJson.latitude);\n          position.push(myJson.longitude);\n\n          this.setState({\n            position\n          });\n        }\n\n        this.setState({\n          loadingMap: false\n        });\n      })\n      .catch(error => {\n        this.setState({\n          loadingMap: false\n        });\n      });\n\n    this.setState({\n      modalMap: !this.state.modalMap,\n      userIP: sessionIP\n    });\n  };\n  handleClickCloseDialog = () => {\n    this.setState({\n      modalInfo: !this.state.modalInfo,\n\n      rowIndex: 0\n    });\n  };\n  handleClickCloseMap = () => {\n    this.setState({\n      modalMap: !this.state.modalMap,\n      userIP: null\n    });\n  };\n\n  handleSetTracing = (index, isTracing) => {\n    const sessionID = this.props.sessions[index].meta.sessionID;\n    sessionAPI\n      .setTracer({ sessionID: sessionID, isTracing: !isTracing })\n      .then(response => {\n        if (response.status === 200) {\n          if (response.data) {\n            let params = {\n              index: index,\n              isTracing: !isTracing\n            };\n            this.props.onChangeTracing(params);\n            toast('success', {\n              transition: Bounce,\n              closeButton: true,\n              autoClose: 5000,\n              position: 'bottom-right',\n              type: 'success'\n            });\n          }\n        }\n      })\n      .catch(error => {\n        toast(error.message, {\n          transition: Bounce,\n          closeButton: true,\n          autoClose: 5000,\n          position: 'bottom-right',\n          type: 'error'\n        });\n      });\n  };\n\n  handleSessionSuspended = (index, suspended) => {\n    const sessionID = this.props.sessions[index].meta.sessionID;\n\n    sessionAPI\n      .suspendSession({\n        sessionID: sessionID,\n        isSuspended: !suspended\n      })\n      .then(response => {\n        if (response.status === 200) {\n          this.props.onChangeSuspended({\n            index: index,\n            isSuspended: !suspended\n          });\n          toast('Suspended', {\n            transition: Bounce,\n            closeButton: true,\n            autoClose: 5000,\n            position: 'bottom-right',\n            type: 'success'\n          });\n        }\n      })\n      .catch(error => {\n        toast(error.message, {\n          transition: Bounce,\n          closeButton: true,\n          autoClose: 5000,\n          position: 'bottom-right',\n          type: 'error'\n        });\n      });\n  };\n\n  handleRemoveSession = sessionID => {\n    sessionAPI\n      .removeSession({ sessionID: sessionID })\n      .then(response => {\n        if (response.status === 200) {\n          this.props.sessionDelete(sessionID);\n          toast('success', {\n            transition: Bounce,\n            closeButton: true,\n            autoClose: 5000,\n            position: 'bottom-right',\n            type: 'success'\n          });\n        }\n      })\n      .catch(error => {\n        toast(error.message, {\n          transition: Bounce,\n          closeButton: true,\n          autoClose: 5000,\n          position: 'bottom-right',\n          type: 'error'\n        });\n      });\n  };\n  goToTracer = sessionID => {\n    const date = new Date();\n    date.setDate(date.getDate() - 30);\n    let search = '?q=' + sessionID;\n    let fromTs = '&start=' + date.toISOString();\n    let toTs = '&end=' + new Date().toISOString();\n\n    history.push('/tracer-manager/tracers' + search + fromTs + toTs);\n  };\n\n  componentDidMount() {\n    const { accountID, fetchGetAccountSessions } = this.props;\n    let params = {\n      accountID: accountID\n    };\n    fetchGetAccountSessions(params);\n  }\n\n  renderInfoDialog() {\n    const { sessions, className } = this.props;\n    const { modalInfo, rowIndex } = this.state;\n\n    if (sessions) {\n      if (modalInfo) {\n        return (\n          <Modal\n            className={className}\n            fade={false}\n            isOpen={modalInfo}\n          >\n            <ModalHeader toggle={this.handleClickCloseDialog}>\n              Session Info\n            </ModalHeader>\n            <ModalBody>\n              <ReactJson src={sessions[rowIndex]} />\n            </ModalBody>\n            <ModalFooter>\n              <Button\n                color=\"link\"\n                onClick={this.handleClickCloseDialog}\n              >\n                Cancel\n              </Button>\n              <Button\n                color=\"primary\"\n                onClick={this.handleClickCloseDialog}\n              >\n                Ok\n              </Button>\n            </ModalFooter>\n          </Modal>\n        );\n      }\n    }\n  }\n\n  renderMap() {\n    const { modalMap, position, loadingMap } = this.state;\n\n    if (modalMap) {\n      return (\n        <Modal\n          fade={false}\n          isOpen={modalMap}\n          size=\"lg\"\n          toggle={this.handleClickOpenMap}\n        >\n          <ModalHeader toggle={this.handleClickCloseMap}>Location</ModalHeader>\n          <ModalBody>\n            {loadingMap ? (\n              <div className=\" d-flex justify-content-center align-items-center leaflet-container\">\n                <Loader type=\"ball-spin-fade-loader\" />\n              </div>\n            ) : (\n              <>\n                {position ? (\n                  <OpenMaps position={position} />\n                ) : (\n                  <div className=\"dropdown-menu-header\">\n                    <div className=\"dropdown-menu-header-inner bg-primary\">\n                      <div className=\"menu-header-content\">\n                        <div>\n                          <h5 className=\"menu-header-title\">\n                            Private IP address\n                          </h5>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </>\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color=\"link\"\n              onClick={this.handleClickCloseMap}\n            >\n              Cancel\n            </Button>\n            <Button\n              color=\"primary\"\n              onClick={this.handleClickCloseMap}\n            >\n              Ok\n            </Button>\n          </ModalFooter>\n        </Modal>\n      );\n    }\n  }\n\n  render() {\n    const { sessions, pending, error } = this.props;\n\n    if (pending) {\n      return (\n        <div className=\"text-center\">\n          <Loader type=\"ball-scale\" />\n        </div>\n      );\n    }\n    if (error) {\n      return (\n        <div className=\"widget-content\">\n          <div className=\"widget-content-wrapper\">\n            <div className=\"widget-content-right ml-0 mr-3\">\n              <div className=\"widget-subheading\">{error}</div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    if (sessions.length === 0) {\n      return (\n        <div className=\"widget-content\">\n          <div className=\"widget-content-wrapper\">\n            <div className=\"widget-content-right ml-0 mr-3\">\n              <div className=\"widget-subheading\">There are no sessions</div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <CardBody>\n          <ReactTable\n            className=\"-striped -highlight\"\n            columns={[\n              {\n                columns: [\n                  {\n                    Header: 'Device Name',\n                    accessor: 'meta.deviceName'\n                  },\n                  {\n                    Header: 'Platform',\n                    accessor: 'meta.platform'\n                  },\n                  {\n                    Header: 'IP',\n                    accessor: 'meta.ip'\n                  },\n                  {\n                    Header: 'Session ID',\n                    accessor: 'meta.sessionID'\n                  },\n                  {\n                    Header: 'Set Tracing',\n                    Cell: row => (\n                      <div className=\"text-center\">\n                        <div\n                          className=\"switch has-switch mr-2 mb-2 mr-2\"\n                          data-off-label=\"OFF\"\n                          data-on-label=\"ON\"\n                          onClick={() =>\n                            this.handleSetTracing(\n                              row.index,\n                              sessions[row.index].isTracing\n                            )\n                          }\n                        >\n                          <div\n                            className={cx('switch-animate', {\n                              'switch-on': sessions[row.index].isTracing,\n                              'switch-off': !sessions[row.index].isTracing\n                            })}\n                          >\n                            <input type=\"checkbox\" />\n                            <span className=\"switch-left bg-danger\">ON</span>\n                            <label>&nbsp;</label>\n                            <span className=\"switch-right bg-danger\">OFF</span>\n                          </div>\n                        </div>\n                      </div>\n                    )\n                  },\n\n                  {\n                    Header: 'Suspend Session',\n                    Cell: row => (\n                      <div className=\"text-center\">\n                        <div\n                          className=\"switch has-switch mr-2 mb-2 mr-2\"\n                          data-off-label=\"OFF\"\n                          data-on-label=\"ON\"\n                          onClick={() =>\n                            this.handleSessionSuspended(\n                              row.index,\n                              sessions[row.index].isSuspended\n                            )\n                          }\n                        >\n                          <div\n                            className={cx('switch-animate', {\n                              'switch-on': sessions[row.index].isSuspended,\n                              'switch-off': !sessions[row.index].isSuspended\n                            })}\n                          >\n                            <input type=\"checkbox\" />\n                            <span className=\"switch-left bg-danger\">ON</span>\n                            <label>&nbsp;</label>\n                            <span className=\"switch-right bg-danger\">OFF</span>\n                          </div>\n                        </div>\n                      </div>\n                    )\n                  },\n\n                  {\n                    Header: 'Remove Session',\n                    Cell: row => (\n                      <div className=\"d-block w-100 text-center\">\n                        <Button\n                          className=\"mb-2 mr-2 btn-icon\"\n                          color=\"warning\"\n                          onClick={() =>\n                            this.handleRemoveSession(\n                              sessions[row.index].meta.sessionID\n                            )\n                          }\n                        >\n                          <i className=\"pe-7s-trash btn-icon-wrapper\" />\n                          Remove\n                        </Button>\n                      </div>\n                    )\n                  },\n\n                  {\n                    Header: 'Detail Info',\n                    Cell: row => (\n                      <div className=\"d-block w-100 text-center\">\n                        <Button\n                          className=\"mb-2 mr-2 btn-icon\"\n                          color=\"danger\"\n                          onClick={() => this.handleClickOpenDialog(row.index)}\n                        >\n                          <i className=\"pe-7s-science btn-icon-wrapper\" />\n                          Info\n                        </Button>\n                      </div>\n                    )\n                  },\n\n                  {\n                    Header: 'Location',\n                    accessor: 'ip',\n                    Cell: row => (\n                      <div className=\"d-block w-100 text-center\">\n                        <Button\n                          className=\"mb-2 mr-2 btn-icon\"\n                          color=\"danger\"\n                          onClick={() =>\n                            this.handleClickOpenMap(sessions[row.index].meta.ip)\n                          }\n                        >\n                          <i className=\"pe-7s-science btn-icon-wrapper\" />\n                          Location\n                        </Button>\n                      </div>\n                    )\n                  },\n                  {\n                    Header: 'Tracer',\n                    accessor: 'ip',\n                    Cell: row => (\n                      <div className=\"d-block w-100 text-center\">\n                        <Button\n                          className=\"mb-2 mr-2 btn-icon\"\n                          color=\"danger\"\n                          onClick={() =>\n                            this.goToTracer(sessions[row.index].meta.sessionID)\n                          }\n                        >\n                          <i className=\"pe-7s-science btn-icon-wrapper\" />\n                          Tracer\n                        </Button>\n                      </div>\n                    )\n                  }\n                ]\n              }\n            ]}\n            data={sessions}\n            defaultPageSize={5}\n            loading={pending}\n          />\n\n          {this.renderMap()}\n          {this.renderInfoDialog()}\n        </CardBody>\n      );\n    }\n  }\n}\n\nSessionTable.propTypes = {\n  className: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    pending: state.session.pending,\n    sessions: state.session.sessions\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchGetAccountSessions: params => dispatch(fetchAccountSessions(params)),\n    onChangeTracing: params => dispatch(updateTracing(params)),\n    onChangeSuspended: params => dispatch(updateSuspended(params)),\n    sessionDelete: sessionID => dispatch(deleteSession(sessionID))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SessionTable);\n","import React, { Component, Fragment } from 'react';\n\nimport PropTypes from 'prop-types';\nimport LaddaButton, { ZOOM_IN } from 'react-ladda';\nimport avatar6 from 'assets/utils/images/avatars/2.jpg';\nimport bg1 from 'assets/utils/images/dropdown-header/abstract1.jpg';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  CardFooter,\n  Row,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  Input\n} from 'reactstrap';\n\nimport generator from 'generate-password';\nimport { connect } from 'react-redux';\nimport SessionTable from './SessionTable';\nimport ReactTable from 'react-table';\nimport { userAPI } from 'service/api';\nimport { toast, Bounce } from 'react-toastify';\nimport LoaderOverlay from 'components/common/LoaderOverlay';\nimport ApplicationTable from './ApplicationTable';\nimport { fetchApplicationsByAccount } from 'store/actions/userActions';\n\nimport Loader from 'react-loaders';\nclass AccountProfile extends Component {\n  state = {\n    password: '',\n    loading: false\n  };\n  renderPhones() {\n    const { userInfo } = this.props;\n    if (!userInfo.phones || userInfo.phones.length === 0) {\n      return (\n        <div className=\"dropdown-menu-header\">\n          <div className=\"dropdown-menu-header-inner bg-primary\">\n            <div className=\"menu-header-content\">\n              <div className=\"widget-subheading\">\n                There are no phones available\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <ListGroup flush>\n        {userInfo.phones.map((phone, i) => (\n          <ListGroupItem key={i}>\n            <div className=\"widget-content p-0\">\n              <div className=\"widget-content-wrapper\">\n                <div className=\"widget-content-left\">\n                  <div className=\"widget-heading\">\n                    <b className=\"text-dark\">Number: </b>\n                    {phone.number}\n                  </div>\n                  <div className=\"widget-subheading\">\n                    <b className=\"text-dark\">Type: </b>\n                    {phone.type}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n    );\n  }\n\n  renderEmails() {\n    const { userInfo } = this.props;\n    if (!userInfo.emails || userInfo.emails.length === 0) {\n      return (\n        <div className=\"dropdown-menu-header\">\n          <div className=\"dropdown-menu-header-inner bg-primary\">\n            <div className=\"menu-header-content\">\n              <div>\n                <div className=\"widget-subheading\">\n                  There are no emails available\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <ListGroup flush>\n        {userInfo.emails.map((email, i) => (\n          <ListGroupItem>\n            <div className=\"widget-content p-0\">\n              <div className=\"widget-content-wrapper\">\n                <div className=\"widget-content-left\">\n                  <div className=\"widget-heading\">\n                    <b className=\"text-dark\">Email: </b>\n                    {email.email}\n                  </div>\n                  <div className=\"widget-subheading\">\n                    <b className=\"text-dark\">Type: </b>\n                    {email.type}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n    );\n  }\n\n  renderBlockList() {\n    const { blockList } = this.props;\n    if (!blockList || blockList.length === 0) {\n      return (\n        <div className=\"dropdown-menu-header\">\n          <div className=\"dropdown-menu-header-inner bg-primary\">\n            <div className=\"menu-header-content\">\n              <div>\n                <div className=\"widget-subheading\">\n                  There are no black list available\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <ReactTable\n        className=\"-striped -highlight\"\n        columns={[\n          {\n            columns: [\n              {\n                Header: 'Account ID',\n                accessor: 'account_id'\n              }\n            ]\n          }\n        ]}\n        data={blockList}\n        defaultPageSize={10}\n      />\n    );\n  }\n\n  renderAuth() {\n    const { userInfo } = this.props;\n\n    return (\n      <ListGroup flush>\n        <div>\n          <ListGroupItem key={userInfo.auth.hasPassword}>\n            <b className=\"text-dark\">Has Password: </b>\n            {userInfo.auth.hasPassword === true ? 'true' : 'false'}\n          </ListGroupItem>\n          <ListGroupItem key={userInfo.auth.passwordType}>\n            <b className=\"text-dark\">Type: </b>\n            {userInfo.auth.passwordType}\n          </ListGroupItem>\n          <ListGroupItem key={userInfo.auth.status}>\n            <b className=\"text-dark\">Status: </b>\n            {userInfo.auth.status}\n          </ListGroupItem>\n        </div>\n      </ListGroup>\n    );\n  }\n\n  handleChangePassword = event => {\n    this.setState({ password: event.target.value });\n  };\n\n  handleGeneratePassword = event => {\n    this.setState({\n      password: generator.generate({\n        length: 10,\n        numbers: true\n      })\n    });\n  };\n  componentDidMount() {\n    this.props.fetchApllicationsByAccount({\n      accountID: this.props.userInfo.accountID\n    });\n  }\n\n  handleSetPassword = event => {\n    const { userInfo } = this.props;\n    const { password } = this.state;\n    this.setState({ loading: true });\n    let params = {\n      password: password,\n      accountID: userInfo.accountID\n    };\n\n    userAPI\n      .setPassword(params)\n      .then(response => {\n        if (response.status === 200) {\n          this.setState({ loading: false, password: '' });\n          toast('success', {\n            transition: Bounce,\n            closeButton: true,\n            autoClose: 5000,\n            position: 'bottom-right',\n            type: 'success'\n          });\n        }\n      })\n      .catch(error => {\n        this.setState({ loading: false, password: '' });\n        toast(error.message, {\n          transition: Bounce,\n          closeButton: true,\n          autoClose: 5000,\n          position: 'bottom-right',\n          type: 'error'\n        });\n      });\n  };\n\n  renderTable() {\n    const { pending, error, applications } = this.props;\n\n    if (pending) {\n      return (\n        <div className=\"text-center\">\n          <Loader type=\"ball-scale\" />\n        </div>\n      );\n    }\n    if (error) {\n      return (\n        <div className=\"widget-content\">\n          <div className=\"widget-content-wrapper\">\n            <div className=\"widget-content-right ml-0 mr-3\">\n              <div className=\"widget-subheading\">{error}</div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    if (applications.length === 0) {\n      return (\n        <div className=\"widget-content\">\n          <div className=\"widget-content-wrapper\">\n            <div className=\"widget-content-right ml-0 mr-3\">\n              <div className=\"widget-subheading\">There are no applications</div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return <ApplicationTable\n        applications={applications}\n        rows={5}\n             />;\n    }\n  }\n\n  render() {\n    const { userInfo } = this.props;\n    const { password, loading } = this.state;\n\n    if (!userInfo) {\n      return <LoaderOverlay />;\n    }\n    return (\n      <Fragment>\n        <ReactCSSTransitionGroup\n          component=\"div\"\n          transitionAppear\n          transitionAppearTimeout={0}\n          transitionEnter={false}\n          transitionLeave={false}\n          transitionName=\"TabsAnimation\"\n        >\n          <div>\n            <Row>\n              <Col\n                lg=\"6\"\n                md=\"12\"\n                xl=\"3\"\n              >\n                <Card className=\"card-shadow-primary profile-responsive card-border mb-3\">\n                  <CardHeader>Profile info</CardHeader>\n                  <div className=\"dropdown-menu-header\">\n                    <div className=\"dropdown-menu-header-inner bg-info\">\n                      <div\n                        className=\"menu-header-image opacity-2\"\n                        style={{\n                          backgroundImage: 'url(' + bg1 + ')'\n                        }}\n                      />\n                      <div className=\"menu-header-content btn-pane-right\">\n                        <div className=\"avatar-icon-wrapper mr-2 avatar-icon-xl\">\n                          <div className=\"avatar-icon rounded\">\n                            <img\n                              alt=\"Avatar 5\"\n                              src={\n                                userInfo && userInfo.avatar !== undefined\n                                  ? `https://wssdev.nexustls.com/files/file/${userInfo.avatar}/medium`\n                                  : avatar6\n                              }\n                            />\n                          </div>\n                        </div>\n                        <div>\n                          <h5 className=\"menu-header-title\">\n                            {userInfo.firstName} {userInfo.lastName}\n                          </h5>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <CardBody className=\"p-0\">\n                    <ListGroup flush>\n                      <ListGroupItem key={userInfo.firstName}>\n                        <b className=\"text-dark\">First Name: </b>\n                        {userInfo.firstName}\n                      </ListGroupItem>\n                      <ListGroupItem key={userInfo.lastName}>\n                        <b className=\"text-dark\">Last Name: </b>\n                        {userInfo.lastName}\n                      </ListGroupItem>\n                      <ListGroupItem key={userInfo.username}>\n                        <b className=\"text-dark\">User Name: </b>\n                        {userInfo.username}\n                      </ListGroupItem>\n                      <ListGroupItem key={userInfo.accountID}>\n                        <b className=\"text-dark\">Account ID: </b>\n                        {userInfo.accountID}\n                      </ListGroupItem>\n                    </ListGroup>\n                  </CardBody>\n                </Card>\n              </Col>\n\n              <Col\n                lg=\"6\"\n                md=\"12\"\n                xl=\"3\"\n              >\n                <Card className=\"card-shadow-primary card-border mb-3\">\n                  <CardHeader> User Auth</CardHeader>\n                  <CardBody className=\"p-0\">{this.renderAuth()}</CardBody>\n\n                  <CardFooter className=\"text-center d-block\">\n                    <Input\n                      className=\"mb-2\"\n                      onChange={this.handleChangePassword}\n                      placeholder=\"password\"\n                      value={password}\n                    />\n                    <Button\n                      className=\"mr-2 border-0 btn-transition\"\n                      color=\"primary\"\n                      onClick={this.handleGeneratePassword}\n                      outline\n                    >\n                      Generate Password\n                    </Button>\n\n                    <LaddaButton\n                      className=\"btn btn-shadow btn-pill btn-focus\"\n                      data-style={ZOOM_IN}\n                      disabled={!password}\n                      loading={loading}\n                      onClick={this.handleSetPassword}\n                    >\n                      Change password\n                    </LaddaButton>\n                  </CardFooter>\n                </Card>\n              </Col>\n\n              <Col\n                lg=\"6\"\n                md=\"12\"\n                xl=\"3\"\n              >\n                <Card className=\"card-shadow-primary card-border mb-3\">\n                  <CardHeader> User Phones</CardHeader>\n                  <CardBody className=\"p-0\">{this.renderPhones()}</CardBody>\n                </Card>\n              </Col>\n              <Col\n                lg=\"6\"\n                md=\"12\"\n                xl=\"3\"\n              >\n                <Card className=\"card-shadow-primary card-border mb-3\">\n                  <CardHeader> User Emails</CardHeader>\n                  <CardBody className=\"p-0\">{this.renderEmails()}</CardBody>\n                </Card>\n              </Col>\n              <Col\n                lg=\"6\"\n                md=\"12\"\n                xl=\"9\"\n              >\n                <Card className=\"card-shadow-primary card-border mb-3\">\n                  <CardHeader> Session Table</CardHeader>\n                  <CardBody className=\"p-0\">\n                    <SessionTable accountID={userInfo.accountID} />\n                  </CardBody>\n                </Card>\n              </Col>\n\n              <Col\n                lg=\"6\"\n                md=\"12\"\n                xl=\"3\"\n              >\n                <Card className=\"card-shadow-primary card-border mb-3\">\n                  <CardHeader> Black List</CardHeader>\n                  <CardBody className=\"p-0\">{this.renderBlockList()}</CardBody>\n                </Card>\n              </Col>\n              <Col\n                lg=\"6\"\n                md=\"12\"\n                xl=\"9\"\n              >\n                <Card className=\"card-shadow-primary card-border mb-3\">\n                  <CardHeader> Application Table</CardHeader>\n                  <CardBody className=\"p-0\">{this.renderTable()}</CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        </ReactCSSTransitionGroup>\n      </Fragment>\n    );\n  }\n}\n\nAccountProfile.propTypes = {\n  className: PropTypes.string\n};\n\nconst mapStateToProps = state => {\n  return {\n    blockList: state.session.blockList,\n    applications: state.user.applications,\n    pending: state.user.pendingApplication,\n    error: state.user.errorApplication\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchApllicationsByAccount: params =>\n      dispatch(fetchApplicationsByAccount(params))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AccountProfile);\n","import * as types from 'constants/ActionType';\nimport { presenceAPI } from 'service/api';\n\nexport function presenceInfoPending() {\n  return {\n    type: types.FETCH_PRESENCE_INFO_PENDING\n  };\n}\n\nexport function presenceInfoSuccess(result) {\n  return {\n    type: types.FETCH_PRESENCE_INFO_SUCCESS,\n    result\n  };\n}\n\nexport function presenceInfoError(error) {\n  return {\n    type: types.FETCH_PRESENCE_INFO_ERROR,\n    error\n  };\n}\n\nexport function fetchPresenceInfo(params) {\n  return dispatch => {\n    dispatch(presenceInfoPending());\n    presenceAPI\n      .getPresenceInfo(params)\n      .then(response => {\n        if (response.data.varStatus !== undefined) {\n          dispatch(presenceInfoSuccess(response.data));\n        } else if (response.data.error !== undefined) {\n          dispatch(presenceInfoSuccess(response.data.error));\n        }\n      })\n      .catch(error => {\n        dispatch(presenceInfoError(''));\n      });\n  };\n}\n","import React, { Fragment } from 'react';\nimport PageTitle from 'components/common/PageTitle';\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport AccountProfile from './AccountProfile';\nimport { fetchApplicationsByAccount } from 'store/actions/userActions';\nimport { fetchPresenceInfo } from 'store/actions/presenceInfoActions';\n\nclass AccountInfo extends React.Component {\n  componentDidMount() {\n    const { user } = this.props;\n    if (!user) {\n      this.props.history.push('/user-manager/users');\n    } else {\n      this.props.fetchPresenceInfo({ accountID: user.accountID });\n    }\n  }\n  render() {\n    if (this.props.user) {\n      return (\n        <Fragment>\n          <PageTitle\n            heading=\"\"\n            icon=\"pe-7s-science icon-gradient bg-happy-itmeo\"\n            subheading=\"\"\n          />\n\n          <AccountProfile userInfo={this.props.user} />\n        </Fragment>\n      );\n    } else {\n      return <div />;\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.accountID;\n\n  return {\n    user: state.user.users.find(user => user.accountID === id)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchApllicationsByAccount: params =>\n      dispatch(fetchApplicationsByAccount(params)),\n    fetchPresenceInfo: params => dispatch(fetchPresenceInfo(params))\n  };\n};\n\nconst WithRouterAccountInfo = withRouter(AccountInfo);\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WithRouterAccountInfo);\n","import React, { Fragment } from 'react';\nimport { Col, Card, CardBody, CardHeader } from 'reactstrap';\nimport {\n  ListGroup,\n  ListGroupItem,\n  ListGroupItemHeading,\n  ListGroupItemText\n} from 'reactstrap';\nimport { dateFormatter } from 'helpers';\n\nclass Info extends React.Component {\n  render() {\n    const { application } = this.props;\n\n    return (\n      <Fragment>\n        <Col md=\"6\">\n          <Card className=\"main-card mb-3\">\n            <CardHeader className=\"card-header-tab\">\n              <div className=\"card-header-title\">Appplication Info</div>\n            </CardHeader>\n            <CardBody>\n              <ListGroup>\n                <ListGroupItem>\n                  <ListGroupItemText>First Name</ListGroupItemText>\n                  <ListGroupItemHeading>\n                    {application.firstName}\n                  </ListGroupItemHeading>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <ListGroupItemText>Last Name</ListGroupItemText>\n                  <ListGroupItemHeading>\n                    {application.lastName}\n                  </ListGroupItemHeading>\n                </ListGroupItem>\n\n                <ListGroupItem>\n                  <ListGroupItemText>Application status</ListGroupItemText>\n                  <ListGroupItemHeading>\n                    {application.status}\n                  </ListGroupItemHeading>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <ListGroupItemText>Country Name</ListGroupItemText>\n                  <ListGroupItemHeading>\n                    {application.countryName}\n                  </ListGroupItemHeading>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <ListGroupItemText>Country ISO Code</ListGroupItemText>\n                  <ListGroupItemHeading>\n                    {application.countryISOCode}\n                  </ListGroupItemHeading>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <ListGroupItemText>Date Time</ListGroupItemText>\n                  <ListGroupItemHeading>\n                    {dateFormatter(application.createdAt)}\n                  </ListGroupItemHeading>\n                </ListGroupItem>\n\n                <ListGroupItem>\n                  <ListGroupItemText>Application ID</ListGroupItemText>\n                  <ListGroupItemHeading>{application.ID}</ListGroupItemHeading>\n                </ListGroupItem>\n              </ListGroup>\n            </CardBody>\n          </Card>\n        </Col>\n      </Fragment>\n    );\n  }\n}\n\nexport default Info;\n","import React, { Fragment } from 'react';\nimport Loader from 'react-loaders';\nimport {\n  Col,\n  Card,\n  CardBody,\n  CardHeader,\n  Table,\n  ListGroup,\n  ListGroupItem\n} from 'reactstrap';\n\nimport avatar6 from 'assets/utils/images/avatars/2.jpg';\nimport bg1 from 'assets/utils/images/dropdown-header/abstract1.jpg';\n\nimport { RViewerTrigger, RViewer } from 'react-viewerjs';\nimport { imageOptions } from 'constants/ActionType';\nimport { getDocumentStatusText } from 'helpers';\nclass DocumentList extends React.Component {\n  renderTable() {\n    const { documents, pending, error } = this.props;\n\n    if (pending) {\n      return (\n        <div className=\"text-center\">\n          <Loader type=\"ball-scale\" />\n        </div>\n      );\n    }\n\n    if (error) {\n      if (!error.accountID) {\n        return (\n          <div className=\"dropdown-menu-header\">\n            <div className=\"dropdown-menu-header-inner bg-primary\">\n              <div className=\"menu-header-content\">\n                <div className=\"widget-subheading\">{error}</div>\n              </div>\n            </div>\n          </div>\n        );\n      }\n      var userInfo = error;\n\n      return (\n        <Card className=\"card-shadow-primary profile-responsive card-border mb-3\">\n          <CardHeader>Заявка уже открыто </CardHeader>\n          <div className=\"dropdown-menu-header\">\n            <div className=\"dropdown-menu-header-inner bg-info\">\n              <div\n                className=\"menu-header-image opacity-2\"\n                style={{\n                  backgroundImage: 'url(' + bg1 + ')'\n                }}\n              />\n              <div className=\"menu-header-content btn-pane-right\">\n                <div className=\"avatar-icon-wrapper mr-2 avatar-icon-xl\">\n                  <div className=\"avatar-icon rounded\">\n                    <img\n                      alt=\"Avatar 5\"\n                      src={\n                        userInfo.avatar !== undefined\n                          ? `https://wssdev.nexustls.com/files/file/${userInfo.avatar}/medium`\n                          : avatar6\n                      }\n                    />\n                  </div>\n                </div>\n                <div>\n                  <h5 className=\"menu-header-title\">\n                    {userInfo.firstName} {userInfo.lastName}\n                  </h5>\n                </div>\n              </div>\n            </div>\n          </div>\n          <CardBody className=\"p-0\">\n            <ListGroup flush>\n              <ListGroupItem>\n                <b className=\"text-dark\">First Name: </b>\n                {userInfo.firstName}\n              </ListGroupItem>\n              <ListGroupItem>\n                <b className=\"text-dark\">Last Name: </b>\n                {userInfo.lastName}\n              </ListGroupItem>\n              <ListGroupItem>\n                <b className=\"text-dark\">User Name: </b>\n                {userInfo.username}\n              </ListGroupItem>\n              <ListGroupItem>\n                <b className=\"text-dark\">Account ID: </b>\n                {userInfo.accountID}\n              </ListGroupItem>\n            </ListGroup>\n          </CardBody>\n        </Card>\n      );\n    }\n    if (documents.length === 0) {\n      return (\n        <div className=\"dropdown-menu-header\">\n          <div className=\"dropdown-menu-header-inner bg-primary\">\n            <div className=\"menu-header-content\">\n              <div className=\"widget-subheading\">There are no documents</div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    if (documents.length > 0) {\n      return (\n        <Table\n          bordered\n          className=\"mb-0\"\n        >\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Document Info</th>\n              <th>Image</th>\n            </tr>\n          </thead>\n\n          {documents.map((document, index) => {\n            return (\n              <tbody>\n                <tr>\n                  <th scope=\"row\">{index + 1}</th>\n                  <td width=\"50%\">\n                    <b className=\"text-dark\">Status: </b>\n                    {getDocumentStatusText(document.status)}\n                    <div className=\"divider\" />\n                    <b className=\"text-dark\">File name: </b>\n                    {document.fileInfo.originalName}\n\n                    <div className=\"divider\" />\n                    <b className=\"text-dark\">Type name: </b>\n                    {document.documentType.typeName}\n                  </td>\n\n                  <td\n                    align=\"center\"\n                    height=\"200px\"\n                    width=\"40%\"\n                  >\n                    <RViewer\n                      imageUrls={`http://10.7.8.129:9004/document/${document.ID}`}\n                      options={imageOptions}\n                    >\n                      <RViewerTrigger>\n                        <img\n                          alt=\"\"\n                          src={`http://10.7.8.129:9004/document/${document.ID}`}\n                          style={{\n                            cursor: 'pointer',\n                            'max-width': '100%',\n                            'max-height': '100%',\n                            verticalAlign: 'middle'\n                          }}\n                        />\n                      </RViewerTrigger>\n                    </RViewer>\n                  </td>\n                </tr>\n              </tbody>\n            );\n          })}\n        </Table>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <Col\n          lg=\"12\"\n          xl=\"6\"\n        >\n          <Card className=\"main-card mb-3\">\n            <CardHeader className=\"card-header-tab\">\n              <div className=\"card-header-title\">Documents</div>\n            </CardHeader>\n            <CardBody>{this.renderTable()}</CardBody>\n          </Card>\n        </Col>\n      </Fragment>\n    );\n  }\n}\n\nexport default DocumentList;\n","import React, { Fragment } from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport {\n  Button,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Container,\n  CardHeader\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  fetchDocuments,\n  deleteApplication,\n  fetchApplications\n} from 'store/actions/passportActions';\nimport Info from './Info';\nimport DocumentList from './DocumentList';\n\nimport { fetchUsers } from 'store/actions/userActions';\nimport DocumentProcedure from 'components/views/PassportManager/DocumentInfo/DocumentProcedure';\n\nclass ApplicationInfo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      startProcedure: false,\n      page: 0,\n      pageSize: 100\n    };\n    this.handleStartProcedure = this.handleStartProcedure.bind(this);\n    this.handleDoneProcedure = this.handleDoneProcedure.bind(this);\n    this.handleGetApplications = this.handleGetApplications.bind(this);\n  }\n  componentDidMount() {\n    const { fetchDocuments, application } = this.props;\n    if (!application) {\n      this.props.history.goBack();\n    } else {\n      fetchDocuments({\n        applicationID: application.ID\n      });\n    }\n  }\n\n  handleStartProcedure() {\n    this.setState({ startProcedure: true });\n  }\n\n  handleDoneProcedure() {\n    this.setState({ startProcedure: false });\n  }\n\n  handleGetApplications() {\n    var filterApplications = this.props.applications.filter(\n      application => application.ID !== this.props.application.ID\n    );\n\n    if (filterApplications.length > 0) {\n      this.props.history.push(\n        `/passport-manager/applications/${filterApplications[0].ID}`\n      );\n    } else {\n    }\n  }\n\n  render() {\n    const { startProcedure } = this.state;\n    const { application, match, documents, errorDoc, pendingDoc } = this.props;\n\n    if (startProcedure && application) {\n      return (\n        <Fragment>\n          <ReactCSSTransitionGroup\n            component=\"div\"\n            transitionAppear\n            transitionAppearTimeout={0}\n            transitionEnter={false}\n            transitionLeave={false}\n            transitionName=\"TabsAnimation\"\n          >\n            <DocumentProcedure\n              accountID={application.accountID}\n              applicationID={application.ID}\n              backUrl={match.url}\n              documents={documents}\n              handleDoneProcedure={this.handleDoneProcedure}\n              handleGetApplications={this.handleGetApplications}\n            />\n          </ReactCSSTransitionGroup>\n        </Fragment>\n      );\n    }\n    if (application) {\n      return (\n        <Fragment>\n          <ReactCSSTransitionGroup\n            component=\"div\"\n            transitionAppear\n            transitionAppearTimeout={0}\n            transitionEnter={false}\n            transitionLeave={false}\n            transitionName=\"TabsAnimation\"\n          >\n            <Container fluid>\n              <Row>\n                <Col md=\"12\">\n                  <Card className=\"main-card mb-3\">\n                    <CardHeader className=\"card-header-tab\">\n                      <div className=\"card-header-title\">\n                        <Button\n                          className={\n                            'border-0 btn-pill btn-wide btn-transition active'\n                          }\n                          color=\"alternate\"\n                          // disabled={\n                          //   documents.length === 0 ||\n                          //   application.status !== 'PENDING'\n                          // }\n                          disabled={\n                            documents.length === 0 ||\n                            application.status !== 'PENDING'\n                          }\n                          onClick={this.handleStartProcedure}\n                          outline\n                        >\n                          Begin review\n                        </Button>\n                      </div>\n                      <div className=\"btn-actions-pane-right\">\n                        Status {'    '}\n                        <Button\n                          className=\"mb-2 mr-2 btn-transition\"\n                          color=\"alternate\"\n                          disabled\n                          outline\n                        >\n                          {application.status}\n                        </Button>\n                      </div>\n                    </CardHeader>\n                    <CardBody className=\"main-card mb-3\">\n                      <Row>\n                        <Info application={application} />\n                        <DocumentList\n                          documents={documents}\n                          error={errorDoc}\n                          pending={pendingDoc}\n                        />\n                      </Row>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </Container>\n          </ReactCSSTransitionGroup>\n        </Fragment>\n      );\n    } else {\n      return <div />;\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.applicationID;\n\n  return {\n    pendingDoc: state.passport.pending,\n    errorDoc: state.passport.error,\n    users: state.user.users,\n\n    pending: state.user.pending,\n    error: state.user.error,\n    documents: state.passport.documents,\n    application: state.user.applications.find(\n      application => application.ID === id\n    ),\n    applications: state.user.applications\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDocuments: params => dispatch(fetchDocuments(params)),\n    fetchUsers: params => dispatch(fetchUsers(params)),\n    deleteApplication: applicationID =>\n      dispatch(deleteApplication(applicationID)),\n    fetchApplications: params => dispatch(fetchApplications(params))\n  };\n};\n\nconst WithRouterApplicationInfo = withRouter(ApplicationInfo);\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WithRouterApplicationInfo);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Dashboard from 'components/Layouts';\nimport Users from './Users';\n\nimport { withRouter } from 'react-router-dom';\nimport AccountInfo from './AccountInfo';\n\nimport ApplicationInfo from './AccountInfo/ApplicationInfo';\nconst UserManager = ({ match }) => {\n  return (\n    <Dashboard>\n      <Route\n        component={Users}\n        exact\n        path={`${match.url}/users`}\n      />\n      <Route\n        component={AccountInfo}\n        exact\n        path={`${match.url}/users/:accountID`}\n        searchPassportManager={false}\n      />\n\n      <Route\n        component={ApplicationInfo}\n        exact\n        path={'/user-manager/users/applicaion/:applicationID'}\n      />\n    </Dashboard>\n  );\n};\n\nexport default withRouter(UserManager);\n"],"sourceRoot":""}