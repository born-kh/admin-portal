{"version":3,"sources":["store/actions/settingsActions.js","components/common/SearchInput/index.jsx","components/views/UserManager/Users/UsersTable.jsx","components/views/UserManager/Users/index.jsx","store/actions/presenceInfoActions.js","components/views/UserManager/AccountInfo/index.jsx","components/views/UserManager/AccountInfo/ApplicationInfo/Info.jsx","components/views/UserManager/AccountInfo/ApplicationInfo/DocumentList.jsx","components/views/UserManager/AccountInfo/ApplicationInfo/index.jsx","components/views/UserManager/index.jsx"],"names":["__webpack_require__","d","__webpack_exports__","changeSearch","_constants_actionType__WEBPACK_IMPORTED_MODULE_0__","search","type","types","payload","connect","state","settings","dispatch","onChangeSearchValue","e","target","value","props","_useState","useState","isActive","_useState2","Object","_Users_nexsus_Documents_projects_react_interface_admin_portal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","activeSearch","toggleSearch","searchWrapperClass","cx","active","handleToggleSearch","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","onChange","onKeyPress","keyPressed","placeholder","onClick","UsersTable","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClickOpenDialog","rowIndex","req","setState","modal","handleClickCloseDialog","bind","assertThisInitialized","_this$props","messagesData","_this$state","react_default","Modal","fade","isOpen","toggle","ModalHeader","ModalBody","main_default","src","request","response","ModalFooter","Button","color","_this$props2","usersData","match","Row","Col","md","Card","CardBody","react_table_es","columns","Header","id","accessor","Cell","row","react_router_dom","to","path","concat","accountID","alt","undefined","avatar","avatar2","width","firstName","lastName","data","defaultPageSize","React","Component","withRouter","Users","handleChangeApplicationSearch","event","defineProperty","name","handleChange","length","params","onBlurUserInput","searchUserList","findIndex","obj","push","filter","console","log","firstname","lastname","phoneNumber","handleOnSubmit","searchAccoountsList","phone","passportAPI","getApplicationsByName","status","Promise","all","applications","map","_ref","asyncToGenerator","regenerator_default","mark","_callee","application","wrap","_context","prev","next","stop","_x2","apply","arguments","fetchUsers","pending","error","users","react_loaders_default","Users_UsersTable","react","react_addons_css_transition_group_default","component","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","transitionName","PageTitle","heading","icon","subheading","CardHeader","FormGroup","Input","onBlur","handleOnChange","outline","renderUserTable","UsersWithRouter","user","profile","auth","session","presenceInfoSuccess","result","fetchPresenceInfo","presenceAPI","getPresenceInfo","then","varStatus","catch","presenceInfoError","AccountInfo","history","AccountProfile","userInfo","WithRouterAccountInfo","ownProps","find","fetchApllicationsByAccount","fetchApplicationsByAccount","Info","ListGroup","ListGroupItem","ListGroupItemText","ListGroupItemHeading","countryName","countryISOCode","dateFormatter","createdAt","ID","DocumentList","documents","style","backgroundImage","bg1","avatar6","flush","username","Table","bordered","document","index","scope","getDocumentStatusText","fileInfo","originalName","documentType","typeName","align","height","react_viewerjs_lib","imageUrls","options","imageOptions","cursor","max-width","max-height","verticalAlign","lg","xl","renderTable","ApplicationInfo","startProcedure","page","pageSize","handleStartProcedure","handleDoneProcedure","handleGetApplications","fetchDocuments","applicationID","goBack","_this2","filterApplications","errorDoc","pendingDoc","DocumentProcedure","backUrl","url","Container","fluid","disabled","ApplicationInfo_Info","ApplicationInfo_DocumentList","WithRouterApplicationInfo","passport","deleteApplication","fetchApplications","JSON","parse","localStorage","getItem","PERMISSIONS","Layouts","react_router","exact","searchPassportManager"],"mappings":"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","file":"static/js/6.8f022e07.chunk.js","sourcesContent":["import * as types from '../../constants/actionType';\n\nexport function changeSearch(search) {\n  return {\n    type: types.CHANGE_SEARCH,\n    payload: search\n  };\n}\n","import React, { useState } from 'react';\nimport cx from 'classnames';\nimport { changeSearch } from 'store/actions/settingsActions';\nimport { connect } from 'react-redux';\n\nconst SearchInput = props => {\n  const [activeSearch, toggleSearch] = useState(props.isActive);\n  const searchWrapperClass = cx('search-wrapper', {\n    active: activeSearch\n  });\n  const handleToggleSearch = () => {\n    toggleSearch(!activeSearch);\n  };\n\n  return (\n    <div className={searchWrapperClass}>\n      <div className=\"input-holder\">\n        <input\n          className=\"search-input\"\n          onChange={props.onChangeSearchValue}\n          onKeyPress={props.keyPressed}\n          placeholder={props.placeholder}\n          type=\"text\"\n          value={props.search}\n        />\n        <button\n          className=\"search-icon\"\n          onClick={handleToggleSearch}\n        >\n          <span />\n        </button>\n      </div>\n      <button\n        className=\"close\"\n        onClick={handleToggleSearch}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  search: state.settings.search\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onChangeSearchValue: e => {\n      dispatch(changeSearch(e.target.value));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchInput);\n","import React from 'react';\n\nimport _ from 'lodash';\nimport { Link, withRouter } from 'react-router-dom';\nimport ReactJson from 'react-json-view';\nimport avatar2 from 'assets/utils/images/avatars/2.jpg';\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\n\nimport ReactTable from 'react-table';\n\nclass UsersTable extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      rowIndex: 0,\n      req: false,\n      modal: false\n    };\n    this.handleClickOpenDialog = this.handleClickOpenDialog.bind(this);\n    this.handleClickCloseDialog = this.handleClickCloseDialog.bind(this);\n  }\n\n  handleClickOpenDialog = (rowIndex, req) => {\n    this.setState({\n      modal: !this.state.modal,\n      req: req,\n      rowIndex\n    });\n  };\n  handleClickCloseDialog = () => {\n    this.setState({\n      modal: !this.state.modal,\n      req: false,\n      rowIndex: 0\n    });\n  };\n\n  renderDialog() {\n    const { messagesData, className } = this.props;\n    const { modal, req } = this.state;\n    if (modal) {\n      return (\n        <Modal\n          fade={false}\n          isOpen={modal}\n          toggle={this.handleClickCloseDialog}\n        >\n          <ModalHeader toggle={this.handleClickCloseDialog}>\n            {req ? 'Request' : 'Response'}\n          </ModalHeader>\n          <ModalBody>\n            <ReactJson\n              src={\n                req\n                  ? messagesData[this.state.rowIndex].request\n                  : messagesData[this.state.rowIndex].response\n              }\n            />\n          </ModalBody>\n          <ModalFooter>\n            <Button\n              color=\"link\"\n              onClick={this.handleClickCloseDialog}\n            >\n              Cancel\n            </Button>\n            <Button\n              color=\"primary\"\n              onClick={this.handleClickCloseDialog}\n            >\n              Ok\n            </Button>\n          </ModalFooter>\n        </Modal>\n      );\n    }\n  }\n\n  render() {\n    const { usersData, match } = this.props;\n    return (\n      <Row>\n        <Col md=\"12\">\n          <Card className=\"main-card mb-3\">\n            <CardBody>\n              <ReactTable\n                className=\"-striped -highlight\"\n                columns={[\n                  {\n                    columns: [\n                      {\n                        Header: 'Full Name',\n                        id: 'row',\n                        accessor: d => d,\n\n                        Cell: row => (\n                          <div>\n                            <Link to={match.path + `/${row.value.accountID}`}>\n                              <div className=\"widget-content p-0\">\n                                <div className=\"widget-content-wrapper\">\n                                  <div className=\"widget-content-left mr-3\">\n                                    <div className=\"widget-content-left\">\n                                      <img\n                                        alt=\"\"\n                                        className=\"rounded-circle\"\n                                        src={\n                                          row.value.avatar !== undefined\n                                            ? `https://wssdev.nexustls.com/files/file/${row.value.avatar}/medium`\n                                            : avatar2\n                                        }\n                                        width={52}\n                                      />\n                                    </div>\n                                  </div>\n\n                                  <div className=\"widget-content-left flex2\">\n                                    <div className=\"widget-heading\">\n                                      {row.value.firstName} {row.value.lastName}\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </Link>\n                          </div>\n                        )\n                      },\n                      {\n                        Header: 'User Name',\n                        accessor: 'username'\n                      },\n                      {\n                        Header: 'Account ID',\n                        accessor: 'accountID'\n                      }\n                    ]\n                  }\n                ]}\n                data={usersData}\n                defaultPageSize={5}\n              />\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default withRouter(UsersTable);\n","import React, { Component, Fragment } from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PageTitle from 'components/common/PageTitle';\n\nimport SearchInput from 'components/common/SearchInput';\nimport Loader from 'react-loaders';\nimport { fetchUsers, fetchUsersPending } from 'store/actions/userActions';\nimport UsersTable from './UsersTable';\nimport {\n  Col,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Input,\n  FormGroup,\n  Button\n} from 'reactstrap';\nimport { DropdownList } from 'react-widgets';\nimport queryString from 'query-string';\nimport PropTypes from 'prop-types';\nimport LoaderOverlay from 'components/common/LoaderOverlay';\n\nimport { passportAPI } from 'service/api';\n\nconst types = ['username', 'phone', 'email', 'accountID'];\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchUserList: [],\n\n      firstname: '',\n      lastname: '',\n      phoneNumber: '',\n      params: {\n        search: '',\n        type: ''\n      }\n    };\n\n    this.handleOnSubmit = this.handleOnSubmit.bind(this);\n  }\n\n  async handleOnSubmit(event) {\n    const { searchUserList } = this.state;\n    var searchAccoountsList = [];\n\n    const { firstname, lastname, phoneNumber } = this.state;\n    let name = {\n      firstName: firstname,\n      lastName: lastname\n    };\n    let params = {\n      name: name,\n      phone: phoneNumber\n    };\n\n    if (firstname !== '' || lastname !== '' || phoneNumber !== '') {\n      const response = await passportAPI.getApplicationsByName(params);\n      if ((response.status = 200)) {\n        await Promise.all(\n          response.data.applications.map(async application => {\n            searchAccoountsList.push({\n              type: 'accountID',\n              search: application.accountID\n            });\n          })\n        );\n        searchAccoountsList = searchAccoountsList.concat(searchUserList);\n        this.props.fetchUsers(searchAccoountsList);\n      }\n    } else {\n      if (searchUserList.length > 0) {\n        this.props.fetchUsers(searchUserList);\n      }\n    }\n  }\n\n  handleChangeApplicationSearch = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    if (value.length === 0) {\n      this.setState({\n        params: { type: '', search: '' }\n      });\n    } else {\n      this.setState({\n        params: { type: name, search: value }\n      });\n    }\n  };\n\n  onBlurUserInput = event => {\n    var searchUserList = this.state.searchUserList;\n    const findIndex = this.state.searchUserList.findIndex(\n      obj => obj.type === event.target.name\n    );\n    // if (event.target.value.length > 0) {\n    if (findIndex === -1) {\n      searchUserList.push({\n        type: event.target.name,\n        search: event.target.value\n      });\n    } else {\n      searchUserList[findIndex] = {\n        type: event.target.name,\n        search: event.target.value\n      };\n    }\n    searchUserList = searchUserList.filter(obj => obj.search !== '');\n    console.log(searchUserList);\n    this.setState({ searchUserList });\n  };\n\n  renderUserTable() {\n    const { pending, error, users } = this.props;\n\n    if (pending) {\n      return (\n        <div className=\"text-center\">\n          <Loader type=\"ball-scale\" />\n        </div>\n      );\n    }\n    if (error) {\n      return (\n        <div className=\"widget-content\">\n          <div className=\"widget-content-wrapper\">\n            <div className=\"widget-content-right ml-0 mr-3\">\n              <div className=\"widget-subheading\">{error}</div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    if (users.length === 0) {\n      return (\n        <div className=\"widget-content\">\n          <div className=\"widget-content-wrapper\">\n            <div className=\"widget-content-right ml-0 mr-3\">\n              <div className=\"widget-subheading\">There are no users</div>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return <UsersTable usersData={users} />;\n    }\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <Fragment>\n        <ReactCSSTransitionGroup\n          component=\"div\"\n          transitionAppear\n          transitionAppearTimeout={0}\n          transitionEnter={false}\n          transitionLeave={false}\n          transitionName=\"TabsAnimation\"\n        >\n          <PageTitle\n            heading=\"User Manager\"\n            icon=\"pe-7s-user icon-gradient bg-night-fade\"\n            subheading=\"\"\n          />\n          <Col md=\"12\">\n            <Card className=\"main-card mb-3\">\n              <CardHeader className=\"card-header-tab\">\n                Advanced search\n              </CardHeader>\n              <CardBody>\n                <Row>\n                  <Col md={2}>\n                    <FormGroup>\n                      <Input\n                        id=\"usernameID\"\n                        name=\"username\"\n                        onBlur={this.onBlurUserInput}\n                        onChange={this.handleOnChange}\n                        placeholder=\"UserName\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Input\n                        id=\"phoneID\"\n                        name=\"phone\"\n                        onBlur={this.onBlurUserInput}\n                        onChange={this.handleOnChange}\n                        placeholder=\"Phone Number\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Input\n                        id=\"accountID\"\n                        name=\"accountID\"\n                        onBlur={this.onBlurUserInput}\n                        onChange={this.handleOnChange}\n                        placeholder=\"Account ID\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Input\n                        id=\"emailID\"\n                        name=\"email\"\n                        onBlur={this.onBlurUserInput}\n                        onChange={this.handleOnChange}\n                        placeholder=\"Email\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col md={2}>\n                    <FormGroup>\n                      <Input\n                        id=\"firstNameID\"\n                        name=\"firstname\"\n                        onBlur={this.onBlurUserInput}\n                        onChange={this.handleChangeApplicationSearch}\n                        placeholder=\"First Name\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Input\n                        id=\"lastNameID\"\n                        name=\"lastname\"\n                        onBlur={this.onBlurUserInput}\n                        onChange={this.handleChangeApplicationSearch}\n                        placeholder=\"Last Name\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n\n                    <FormGroup>\n                      <Input\n                        id=\"passportID\"\n                        name=\"passportID\"\n                        onChange={this.handleChangeApplicationSearch}\n                        placeholder=\"Passport ID\"\n                        type=\"text\"\n                      />\n                    </FormGroup>\n                    <Button\n                      className={\n                        'border-0 btn-pill btn-wide  btn-transition active'\n                      }\n                      color=\"alternate\"\n                      onClick={this.handleOnSubmit}\n                      outline\n                    >\n                      Search\n                    </Button>\n                  </Col>\n                </Row>\n                {this.renderUserTable()}\n              </CardBody>\n            </Card>\n          </Col>\n        </ReactCSSTransitionGroup>\n      </Fragment>\n    );\n  }\n}\n\nUsers.propTypes = {\n  className: PropTypes.string\n};\n\nconst mapStateToProps = state => ({\n  users: state.user.users,\n  search: state.settings.search,\n  pending: state.user.pending,\n  error: state.user.error,\n  profile: state.auth.profile,\n  session: state.auth.session\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: params => dispatch(fetchUsers(params))\n  };\n};\n\nconst UsersWithRouter = withRouter(Users);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UsersWithRouter);\n","import * as types from '../../constants/actionType';\nimport { presenceAPI } from 'service/api';\nimport { errorMessage } from 'helpers/errorMessage';\n\nexport function presenceInfoPending() {\n  return {\n    type: types.FETCH_PRESENCE_INFO_PENDING\n  };\n}\n\nexport function presenceInfoSuccess(result) {\n  return {\n    type: types.FETCH_PRESENCE_INFO_SUCCESS,\n    result\n  };\n}\n\nexport function presenceInfoError(error) {\n  return {\n    type: types.FETCH_PRESENCE_INFO_ERROR,\n    error\n  };\n}\n\nexport function fetchPresenceInfo(params) {\n  return dispatch => {\n    dispatch(presenceInfoPending());\n    presenceAPI\n      .getPresenceInfo(params)\n      .then(response => {\n        if (response.data.varStatus !== undefined) {\n          dispatch(presenceInfoSuccess(response.data));\n        } else if (response.data.error !== undefined) {\n          dispatch(presenceInfoSuccess(response.data.error));\n        }\n      })\n      .catch(error => {\n        dispatch(presenceInfoError(''));\n      });\n  };\n}\n","import React, { Fragment } from 'react';\nimport PageTitle from 'components/common/PageTitle';\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport AccountProfile from './AccountProfile';\nimport {\n  fetchUsers,\n  fetchApplicationsByAccount\n} from 'store/actions/userActions';\nimport { fetchPresenceInfo } from 'store/actions/presenceInfoActions';\n\nclass AccountInfo extends React.Component {\n  componentDidMount() {\n    const { user } = this.props;\n    if (!user) {\n      this.props.history.push('/user-manager/users');\n    } else {\n      this.props.fetchPresenceInfo({ accountID: user.accountID });\n    }\n  }\n  render() {\n    if (this.props.user) {\n      return (\n        <Fragment>\n          <PageTitle\n            heading=\"\"\n            icon=\"pe-7s-science icon-gradient bg-happy-itmeo\"\n            subheading=\"\"\n          />\n\n          <AccountProfile userInfo={this.props.user} />\n        </Fragment>\n      );\n    } else {\n      return <div />;\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.accountID;\n\n  return {\n    user: state.user.users.find(user => user.accountID === id)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchApllicationsByAccount: params =>\n      dispatch(fetchApplicationsByAccount(params)),\n    fetchPresenceInfo: params => dispatch(fetchPresenceInfo(params))\n  };\n};\n\nconst WithRouterAccountInfo = withRouter(AccountInfo);\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WithRouterAccountInfo);\n","import React, { Fragment } from 'react';\nimport { Col, Card, CardBody, CardHeader } from 'reactstrap';\nimport {\n  ListGroup,\n  ListGroupItem,\n  ListGroupItemHeading,\n  ListGroupItemText\n} from 'reactstrap';\nimport { dateFormatter } from 'helpers';\n\nclass Info extends React.Component {\n  render() {\n    const { application } = this.props;\n\n    return (\n      <Fragment>\n        <Col md=\"6\">\n          <Card className=\"main-card mb-3\">\n            <CardHeader className=\"card-header-tab\">\n              <div className=\"card-header-title\">Appplication Info</div>\n            </CardHeader>\n            <CardBody>\n              <ListGroup>\n                <ListGroupItem>\n                  <ListGroupItemText>First Name</ListGroupItemText>\n                  <ListGroupItemHeading>\n                    {application.firstName}\n                  </ListGroupItemHeading>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <ListGroupItemText>Last Name</ListGroupItemText>\n                  <ListGroupItemHeading>\n                    {application.lastName}\n                  </ListGroupItemHeading>\n                </ListGroupItem>\n\n                <ListGroupItem>\n                  <ListGroupItemText>Application status</ListGroupItemText>\n                  <ListGroupItemHeading>\n                    {application.status}\n                  </ListGroupItemHeading>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <ListGroupItemText>Country Name</ListGroupItemText>\n                  <ListGroupItemHeading>\n                    {application.countryName}\n                  </ListGroupItemHeading>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <ListGroupItemText>Country ISO Code</ListGroupItemText>\n                  <ListGroupItemHeading>\n                    {application.countryISOCode}\n                  </ListGroupItemHeading>\n                </ListGroupItem>\n                <ListGroupItem>\n                  <ListGroupItemText>Date Time</ListGroupItemText>\n                  <ListGroupItemHeading>\n                    {dateFormatter(application.createdAt)}\n                  </ListGroupItemHeading>\n                </ListGroupItem>\n\n                <ListGroupItem>\n                  <ListGroupItemText>Application ID</ListGroupItemText>\n                  <ListGroupItemHeading>{application.ID}</ListGroupItemHeading>\n                </ListGroupItem>\n              </ListGroup>\n            </CardBody>\n          </Card>\n        </Col>\n      </Fragment>\n    );\n  }\n}\n\nexport default Info;\n","import React, { Fragment } from 'react';\nimport Loader from 'react-loaders';\nimport {\n  Col,\n  Card,\n  CardBody,\n  CardHeader,\n  Table,\n  ListGroup,\n  ListGroupItem\n} from 'reactstrap';\nimport Lightbox from 'react-image-lightbox';\nimport avatar6 from 'assets/utils/images/avatars/2.jpg';\nimport bg1 from 'assets/utils/images/dropdown-header/abstract1.jpg';\n\nimport { RViewerTrigger, RViewer } from 'react-viewerjs';\nimport { imageOptions } from 'constants/actionType';\nimport { getDocumentStatusText } from 'helpers';\nclass DocumentList extends React.Component {\n  renderTable() {\n    const { documents, pending, error } = this.props;\n    console.log(pending, error);\n\n    if (pending) {\n      return (\n        <div className=\"text-center\">\n          <Loader type=\"ball-scale\" />\n        </div>\n      );\n    }\n\n    if (error) {\n      if (!error.accountID) {\n        return (\n          <div className=\"dropdown-menu-header\">\n            <div className=\"dropdown-menu-header-inner bg-primary\">\n              <div className=\"menu-header-content\">\n                <div className=\"widget-subheading\">{error}</div>\n              </div>\n            </div>\n          </div>\n        );\n      }\n      var userInfo = error;\n\n      return (\n        <Card className=\"card-shadow-primary profile-responsive card-border mb-3\">\n          <CardHeader>Заявка уже открыто </CardHeader>\n          <div className=\"dropdown-menu-header\">\n            <div className=\"dropdown-menu-header-inner bg-info\">\n              <div\n                className=\"menu-header-image opacity-2\"\n                style={{\n                  backgroundImage: 'url(' + bg1 + ')'\n                }}\n              />\n              <div className=\"menu-header-content btn-pane-right\">\n                <div className=\"avatar-icon-wrapper mr-2 avatar-icon-xl\">\n                  <div className=\"avatar-icon rounded\">\n                    <img\n                      alt=\"Avatar 5\"\n                      src={\n                        userInfo.avatar !== undefined\n                          ? `https://wssdev.nexustls.com/files/file/${userInfo.avatar}/medium`\n                          : avatar6\n                      }\n                    />\n                  </div>\n                </div>\n                <div>\n                  <h5 className=\"menu-header-title\">\n                    {userInfo.firstName} {userInfo.lastName}\n                  </h5>\n                </div>\n              </div>\n            </div>\n          </div>\n          <CardBody className=\"p-0\">\n            <ListGroup flush>\n              <ListGroupItem>\n                <b className=\"text-dark\">First Name: </b>\n                {userInfo.firstName}\n              </ListGroupItem>\n              <ListGroupItem>\n                <b className=\"text-dark\">Last Name: </b>\n                {userInfo.lastName}\n              </ListGroupItem>\n              <ListGroupItem>\n                <b className=\"text-dark\">User Name: </b>\n                {userInfo.username}\n              </ListGroupItem>\n              <ListGroupItem>\n                <b className=\"text-dark\">Account ID: </b>\n                {userInfo.accountID}\n              </ListGroupItem>\n            </ListGroup>\n          </CardBody>\n        </Card>\n      );\n    }\n    if (documents.length == 0) {\n      return (\n        <div className=\"dropdown-menu-header\">\n          <div className=\"dropdown-menu-header-inner bg-primary\">\n            <div className=\"menu-header-content\">\n              <div className=\"widget-subheading\">There are no documents</div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    if (documents.length > 0) {\n      return (\n        <Table\n          bordered\n          className=\"mb-0\"\n        >\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Document Info</th>\n              <th>Image</th>\n            </tr>\n          </thead>\n\n          {documents.map((document, index) => {\n            return (\n              <tbody>\n                <tr>\n                  <th scope=\"row\">{index + 1}</th>\n                  <td width=\"50%\">\n                    <b className=\"text-dark\">Status: </b>\n                    {getDocumentStatusText(document.status)}\n                    <div className=\"divider\" />\n                    <b className=\"text-dark\">File name: </b>\n                    {document.fileInfo.originalName}\n\n                    <div className=\"divider\" />\n                    <b className=\"text-dark\">Type name: </b>\n                    {document.documentType.typeName}\n                  </td>\n\n                  <td\n                    align=\"center\"\n                    height=\"200px\"\n                    width=\"40%\"\n                  >\n                    <RViewer\n                      imageUrls={`http://10.7.8.129:9004/document/${document.ID}`}\n                      options={imageOptions}\n                    >\n                      <RViewerTrigger>\n                        <img\n                          src={`http://10.7.8.129:9004/document/${document.ID}`}\n                          style={{\n                            cursor: 'pointer',\n                            'max-width': '100%',\n                            'max-height': '100%',\n                            verticalAlign: 'middle'\n                          }}\n                        />\n                      </RViewerTrigger>\n                    </RViewer>\n                  </td>\n                </tr>\n              </tbody>\n            );\n          })}\n        </Table>\n      );\n    }\n  }\n\n  render() {\n    const { documents, pending, error } = this.props;\n    console.log(error);\n\n    return (\n      <Fragment>\n        <Col\n          lg=\"12\"\n          xl=\"6\"\n        >\n          <Card className=\"main-card mb-3\">\n            <CardHeader className=\"card-header-tab\">\n              <div className=\"card-header-title\">Documents</div>\n            </CardHeader>\n            <CardBody>{this.renderTable()}</CardBody>\n          </Card>\n        </Col>\n      </Fragment>\n    );\n  }\n}\n\nexport default DocumentList;\n","import React, { Fragment } from 'react';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport {\n  Button,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Container,\n  CardHeader\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  fetchDocuments,\n  deleteApplication,\n  fetchApplications\n} from 'store/actions/passportActions';\nimport Info from './Info';\nimport DocumentList from './DocumentList';\n\nimport { history } from 'helpers';\nimport { fetchUsers } from 'store/actions/userActions';\nimport DocumentProcedure from 'components/views/PassportManager/DocumentInfo/DocumentProcedure';\n\nclass ApplicationInfo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      startProcedure: false,\n      page: 0,\n      pageSize: 100\n    };\n    this.handleStartProcedure = this.handleStartProcedure.bind(this);\n    this.handleDoneProcedure = this.handleDoneProcedure.bind(this);\n    this.handleGetApplications = this.handleGetApplications.bind(this);\n  }\n  componentDidMount() {\n    const { fetchDocuments, application, fetchUsers } = this.props;\n    if (!application) {\n      this.props.history.goBack();\n    } else {\n      fetchDocuments({\n        applicationID: application.ID\n      });\n    }\n  }\n\n  handleStartProcedure() {\n    this.setState({ startProcedure: true });\n  }\n\n  handleDoneProcedure() {\n    this.setState({ startProcedure: false });\n  }\n\n  handleGetApplications() {\n    var filterApplications = this.props.applications.filter(\n      application => application.ID !== this.props.application.ID\n    );\n\n    if (filterApplications.length > 0) {\n      this.props.history.push(\n        `/passport-manager/applications/${filterApplications[0].ID}`\n      );\n    } else {\n    }\n  }\n\n  render() {\n    const { startProcedure } = this.state;\n    const { application, match, documents, errorDoc, pendingDoc } = this.props;\n\n    if (startProcedure && application) {\n      return (\n        <Fragment>\n          <ReactCSSTransitionGroup\n            component=\"div\"\n            transitionAppear\n            transitionAppearTimeout={0}\n            transitionEnter={false}\n            transitionLeave={false}\n            transitionName=\"TabsAnimation\"\n          >\n            <DocumentProcedure\n              accountID={application.accountID}\n              applicationID={application.ID}\n              backUrl={match.url}\n              documents={documents}\n              handleDoneProcedure={this.handleDoneProcedure}\n              handleGetApplications={this.handleGetApplications}\n            />\n          </ReactCSSTransitionGroup>\n        </Fragment>\n      );\n    }\n    if (application) {\n      return (\n        <Fragment>\n          <ReactCSSTransitionGroup\n            component=\"div\"\n            transitionAppear\n            transitionAppearTimeout={0}\n            transitionEnter={false}\n            transitionLeave={false}\n            transitionName=\"TabsAnimation\"\n          >\n            <Container fluid>\n              <Row>\n                <Col md=\"12\">\n                  <Card className=\"main-card mb-3\">\n                    <CardHeader className=\"card-header-tab\">\n                      <div className=\"card-header-title\">\n                        <Button\n                          className={\n                            'border-0 btn-pill btn-wide btn-transition active'\n                          }\n                          color=\"alternate\"\n                          // disabled={\n                          //   documents.length === 0 ||\n                          //   application.status !== 'PENDING'\n                          // }\n                          disabled={\n                            documents.length === 0 ||\n                            application.status !== 'PENDING'\n                          }\n                          onClick={this.handleStartProcedure}\n                          outline\n                        >\n                          Begin review\n                        </Button>\n                      </div>\n                      <div className=\"btn-actions-pane-right\">\n                        Status {'    '}\n                        <Button\n                          className=\"mb-2 mr-2 btn-transition\"\n                          color=\"alternate\"\n                          disabled\n                          outline\n                        >\n                          {application.status}\n                        </Button>\n                      </div>\n                    </CardHeader>\n                    <CardBody className=\"main-card mb-3\">\n                      <Row>\n                        <Info application={application} />\n                        <DocumentList\n                          documents={documents}\n                          error={errorDoc}\n                          pending={pendingDoc}\n                        />\n                      </Row>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </Container>\n          </ReactCSSTransitionGroup>\n        </Fragment>\n      );\n    } else {\n      return <div />;\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let id = ownProps.match.params.applicationID;\n\n  return {\n    pendingDoc: state.passport.pending,\n    errorDoc: state.passport.error,\n    users: state.user.users,\n\n    pending: state.user.pending,\n    error: state.user.error,\n    documents: state.passport.documents,\n    application: state.user.applications.find(\n      application => application.ID === id\n    ),\n    applications: state.user.applications\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchDocuments: params => dispatch(fetchDocuments(params)),\n    fetchUsers: params => dispatch(fetchUsers(params)),\n    deleteApplication: applicationID =>\n      dispatch(deleteApplication(applicationID)),\n    fetchApplications: params => dispatch(fetchApplications(params))\n  };\n};\n\nconst WithRouterApplicationInfo = withRouter(ApplicationInfo);\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WithRouterApplicationInfo);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Dashboard from 'components/Layouts';\nimport Users from './Users';\n\nimport { withRouter } from 'react-router-dom';\nimport AccountInfo from './AccountInfo';\nimport PERMISSIONS from 'constants';\n\nimport ApplicationInfo from './AccountInfo/ApplicationInfo';\nconst UserManager = ({ match }) => {\n  console.log('User Manager');\n  const permissions = JSON.parse(localStorage.getItem(PERMISSIONS));\n\n  return (\n    <Dashboard>\n      <Route\n        component={Users}\n        exact\n        path={`${match.url}/users`}\n      />\n      <Route\n        component={AccountInfo}\n        exact\n        path={`${match.url}/users/:accountID`}\n        searchPassportManager={false}\n      />\n\n      <Route\n        component={ApplicationInfo}\n        exact\n        path={'/user-manager/users/applicaion/:applicationID'}\n      />\n    </Dashboard>\n  );\n};\n\nexport default withRouter(UserManager);\n"],"sourceRoot":""}